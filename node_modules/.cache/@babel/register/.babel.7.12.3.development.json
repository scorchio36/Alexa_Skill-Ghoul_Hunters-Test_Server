{
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ClientState = _interopRequireDefault(require(\"./ClientState.js\"));\n\nvar _GameState = _interopRequireDefault(require(\"./GameState.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar http = require('http');\n\nvar url = require('url');\n\nvar uniqid = require('uniqid');\n\nvar WebSocket = require('ws');\n\nvar generateRandomRoomID = require('./RoomIDGenerator.js');\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\n\n\nvar SERVER_PORT = 8080;\nvar payload_storage = null;\nvar activeRoomIDs = [];\nvar activeClientStates = [];\nvar websocketConnection = null; //stores the websocket object returned by on 'connection'\n\n/*gameStates holds all of the available GameState objects. They will be indexed\r\nby the roomID. */\n\nvar gameStates = new Map(); // Set up the HTTP server needed for WS\n\nvar server = http.createServer(function (req, res) {}).listen(SERVER_PORT, function () {\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\n}); // mount the websockets \"server\" onto the http server\n\nvar wsServer = new WebSocket.Server({\n  server: server,\n  clientTracking: true\n}); // Register the request handler with the WS server object\n\nwsServer.on('connection', handleWS_onConnection);\n/* ===== WS Handlers ===== */\n\nfunction handleWS_onConnection(websocket, request) {\n  console.log(\"(+(\".concat(new Date(), \") Connection to \").concat(request.socket.remoteAddress, \" accepted.\")); // client ID will be generated server-side\n\n  var newClientID = uniqid(); // it may be better to create a ClientState on connection, let's try that here\n\n  activeClientStates.push(new _ClientState[\"default\"](newClientID, null, null, websocket, \"player\")); // register message, error, and close handlers with websocket object\n\n  websocket.on('message', handleWS_onMessage);\n  websocket.on('error', handleWS_onError);\n  websocket.on('close', handleWS_onClose); // let the client know what their new ID will be\n\n  websocket.send(JSON.stringify({\n    action: \"client_id_and_ws_connection_created\",\n    clientID: newClientID\n  }));\n}\n\nfunction handleWS_onMessage(message) {\n  var jsonPayload = JSON.parse(message);\n  var currentClientState = getClientState(jsonPayload.clientID);\n  console.log(\"(\".concat(new Date(), \") Message received: \").concat(message));\n  /* Similar to the client's conditional action monitoring, this set of\r\n  conditionals within the handleWS_onMessage function check the incoming action\r\n  from the client, perform operations according the intercepted action, and return\r\n  any necessary results to the client. */\n\n  if (jsonPayload.action == \"create_room\") {\n    // The client is creating a new room, so generate a new room ID\n    var newRoomID = generateRandomRoomID();\n\n    while (activeRoomIDs.includes(newRoomID)) {\n      // don't repeat room IDs\n      newRoomID = generateRandomRoomID();\n    }\n    /* Create a new GameState object to go along with the new RoomID. Add the\r\n    client that created a room to the GameState's ClientStates list. */\n\n\n    gameStates.set(newRoomID, new _GameState[\"default\"]());\n    gameStates.get(newRoomID).addClientState(currentClientState); // add the new roomID to the tracking array and update the current ClientState's roomID\n\n    activeRoomIDs.push(newRoomID);\n    currentClientState.roomID = newRoomID; // let the client know the operation was successful and give them the new RoomID\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"create_room_successful\",\n      roomID: newRoomID\n    }));\n  } // a new client has requested to join a room\n\n\n  if (jsonPayload.action == \"join_room\") {\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\n    if (!activeRoomIDs.includes(jsonPayload.roomID)) {\n      // send back a response saying that the roomID is invalid\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_failed\"\n      }));\n    } else {\n      //If the room is valid, update the RoomID of the current ClientState\n      currentClientState.roomID = jsonPayload.roomID; //add client to the correct gameState\n\n      gameStates.get(jsonPayload.roomID).addClientState(currentClientState);\n      /* Let each similar client know that a new player has joined their room. This\r\n      allows each similar client to keep track of each other and allows UI to be\r\n      properly updated on the client side. */\n\n      var similarClientStates = getSimilarClientStates(currentClientState.clientID);\n\n      var _iterator = _createForOfIteratorHelper(similarClientStates),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var clientState = _step.value;\n          clientState.websocketConnection.send(JSON.stringify({\n            action: \"new_client_joined_room\",\n            similarClientID: currentClientState.clientID\n          }));\n        }\n        /* Return a list of similar clients to the current client, so the current\r\n        client may properly update it's UI and know which clients are in the room\r\n        that was just joined */\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_successful\",\n        roomID: currentClientState.roomID,\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\n      }));\n    }\n  }\n\n  if (jsonPayload.action == \"start_game\") {\n    /* We will need all the similar clients to update their roles and alert them\r\n    that the game has started */\n    var _similarClientStates = getSimilarClientStates(currentClientState.clientID);\n\n    console.log(_similarClientStates.length);\n\n    var currentAndSimilarClientStates = _similarClientStates.concat(currentClientState);\n\n    console.log(currentAndSimilarClientStates[currentAndSimilarClientStates.length - 1]); // randomly assign one of the clients to be a ghoul\n\n    var randomGhoulIndex = Math.floor(Math.random() * currentAndSimilarClientStates.length); // add 1 to account for the currenClient\n\n    console.log(\"RandomGhoulIndex: \".concat(randomGhoulIndex));\n    currentAndSimilarClientStates[randomGhoulIndex].role = \"ghoul\"; //initialize remainingPlayers property in GameState\n\n    var gameState = gameStates.get(currentClientState.roomID);\n    gameState.remainingPlayers = gameState.clientStates.size - 1; //-2 because ghoul is not a remiaining player\n    // let each similar client know their role and alert them of game start\n\n    var _iterator2 = _createForOfIteratorHelper(_similarClientStates),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _clientState = _step2.value;\n\n        _clientState.websocketConnection.send(JSON.stringify({\n          action: \"game_started\",\n          role: _clientState.role\n        }));\n      } // alert the current client and also tell the client his role\n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"game_started\",\n      role: currentClientState.role\n    }));\n  } // ghoul has hidden the treasure. Let users know that they can now play and move around\n\n\n  if (jsonPayload.action == \"treasure_hidden\") {\n    var _similarClientStates2 = getSimilarClientStates(currentClientState.clientID); // let each similar client know their role and alert them of game start\n\n\n    var _iterator3 = _createForOfIteratorHelper(_similarClientStates2),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _clientState2 = _step3.value;\n\n        _clientState2.websocketConnection.send(JSON.stringify({\n          action: \"allow_player_movement\",\n          searchable: jsonPayload.searchable\n        }));\n      } // alert the current client and also tell the client his role\n\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"allow_player_movement\",\n      searchable: jsonPayload.searchable\n    }));\n  }\n  /* If a player moves, update the location in their respective ClientState.\r\n  Also, check if a player and ghoul's location coincide with each other. If they\r\n  do, then let the ghoul know he killed a player, and the player know that they\r\n  died. */\n\n\n  if (jsonPayload.action == \"update_location\") {\n    currentClientState.location = jsonPayload.location;\n\n    var _gameState = gameStates.get(currentClientState.roomID); // if the player is the ghoul, compare their location with all players\n\n\n    var similarClientState = null;\n\n    if (currentClientState.role == \"ghoul\") {\n      var _iterator4 = _createForOfIteratorHelper(jsonPayload.similarClients),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var similarClientID = _step4.value;\n          similarClientState = getClientState(similarClientID);\n\n          if (similarClientState.location == currentClientState.location) {\n            //let player know they were killed\n            similarClientState.websocketConnection.send(JSON.stringify({\n              action: \"killed_by_ghoul\"\n            }));\n            currentClientState.websocketConnection.send(JSON.stringify({\n              //let ghoul know he killed someone\n              action: \"killed_a_player\",\n              killedClient: similarClientState.clientID\n            })); // decrement remainingPlayers each time ghoul kills a player\n\n            _gameState.remainingPlayers--;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    } // if the player is not a ghoul, compare their location to the ghoul\n    else {\n        var ghoulClientState = null;\n\n        var _iterator5 = _createForOfIteratorHelper(jsonPayload.similarClients),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _similarClientID = _step5.value;\n            ghoulClientState = getClientState(_similarClientID);\n\n            if (ghoulClientState.role == \"ghoul\") {\n              if (currentClientState.location == ghoulClientState.location) {\n                currentClientState.websocketConnection.send(JSON.stringify({\n                  //let player know they were killed\n                  action: \"killed_by_ghoul\"\n                }));\n                ghoulClientState.websocketConnection.send(JSON.stringify({\n                  //let ghoul know he killed someone\n                  action: \"killed_a_player\",\n                  killedClient: similarClientState.clientID\n                }));\n                _gameState.remainingPlayers--;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n\n    if (_gameState.remainingPlayers == 0) {\n      var _similarClientStates3 = getSimilarClientStates(currentClientState.clientID); //let all clients know that the game is over\n\n\n      var _iterator6 = _createForOfIteratorHelper(_similarClientStates3),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _similarClientState = _step6.value;\n          if (_similarClientState.role == \"ghoul\") _similarClientState.websocketConnection.send(JSON.stringify({\n            action: \"game_over_ghoul_wins\",\n            isWinner: true\n          }));else {\n            _similarClientState.websocketConnection.send(JSON.stringify({\n              action: \"game_over_ghoul_wins\",\n              isWinner: false\n            }));\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      if (currentClientState.role == \"ghoul\") {\n        currentClientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_ghoul_wins\",\n          isWinner: true\n        }));\n      } else {\n        currentClientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_ghoul_wins\",\n          isWinner: false\n        }));\n      }\n    }\n  }\n\n  if (jsonPayload.action == \"player_wins\") {\n    var _similarClientStates4 = getSimilarClientStates(currentClientState.clientID);\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"game_over_player_wins\",\n      isWinner: true\n    }));\n\n    var _iterator7 = _createForOfIteratorHelper(_similarClientStates4),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _clientState3 = _step7.value;\n\n        if (_clientState3.role == \"ghoul\") {\n          _clientState3.websocketConnection.send(JSON.stringify({\n            action: \"game_over_player_wins\",\n            isWinner: false\n          }));\n        } else {\n          _clientState3.websocketConnection.send(JSON.stringify({\n            action: \"game_over_player_wins\",\n            isWinner: true\n          }));\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  }\n}\n\nfunction handleWS_onError(err) {\n  console.log(\"(\".concat(new Date(), \") Error: \").concat(err));\n}\n\nfunction handleWS_onClose(reasonCode, description, connection) {\n  console.log(new Date() + ': Connection closed.');\n} // Retrieve a ClientState that matches the given clientID\n// Clean this up with For...of loops later...\n\n\nfunction getClientState(clientID) {\n  for (var i = 0; i < activeClientStates.length; i++) {\n    if (activeClientStates[i].clientID == clientID) {\n      return activeClientStates[i];\n    }\n  }\n}\n/* Return a list of a ClientStates mactching the given roomID, except for the\r\nClientState that has the same clientID that was passed in as an input param. */\n\n\nfunction getSimilarClientStates(clientID) {\n  var similarClientStates = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientStates.push(activeClientStates[i]);\n    }\n  }\n\n  return similarClientStates;\n}\n/* Return a list of a Client IDs corresponding to matching the given roomID. Every\r\nmatching client ID is returned except for the client ID that was passed into the\r\nfunction. */\n\n\nfunction getSimilarClientIDs(clientID) {\n  var similarClientIDs = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientIDs.push(activeClientStates[i].clientID);\n    }\n  }\n\n  return similarClientIDs;\n}\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\n\n/*if (!activeRoomIDs.includes(roomID)) {\r\n  // send back a response saying that the roomID is invalid\r\n}\r\nelse { //If the room is valid, create a new ClientState to keep track of the new client\r\n  activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n    // return a list of clientIDs that are also associated with that room\r\n  res.writeHead(200, { 'Content-Type': 'application/json' });\r\n  res.write(JSON.stringify({\r\n    clientsInRoom: clientIDsInRoom()\r\n  }));\r\n}\r\n}\r\n}\r\nelse if(req.method == 'POST') {\r\nconsole.log('Received an HTTP POST request...');\r\n// at some point move this parsing into a helper function\r\nlet body = '';\r\nreq.on('data', function(chunks) {\r\nbody += chunks.toString();\r\n});\r\nreq.on('end', function() {\r\nconsole.log(`Posted Data: ${body}`);\r\nconsole.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n});\r\n}\r\nres.end();\r\n});\r\nserver.listen(SERVER_PORT, function() {\r\nconsole.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\n\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\n\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "http",
        "require",
        "url",
        "uniqid",
        "WebSocket",
        "generateRandomRoomID",
        "SERVER_PORT",
        "payload_storage",
        "activeRoomIDs",
        "activeClientStates",
        "websocketConnection",
        "gameStates",
        "Map",
        "server",
        "createServer",
        "req",
        "res",
        "listen",
        "console",
        "log",
        "wsServer",
        "Server",
        "clientTracking",
        "on",
        "handleWS_onConnection",
        "websocket",
        "request",
        "Date",
        "socket",
        "remoteAddress",
        "newClientID",
        "push",
        "ClientState",
        "handleWS_onMessage",
        "handleWS_onError",
        "handleWS_onClose",
        "send",
        "JSON",
        "stringify",
        "action",
        "clientID",
        "message",
        "jsonPayload",
        "parse",
        "currentClientState",
        "getClientState",
        "newRoomID",
        "includes",
        "set",
        "GameState",
        "get",
        "addClientState",
        "roomID",
        "similarClientStates",
        "getSimilarClientStates",
        "clientState",
        "similarClientID",
        "similarClients",
        "getSimilarClientIDs",
        "length",
        "currentAndSimilarClientStates",
        "concat",
        "randomGhoulIndex",
        "Math",
        "floor",
        "random",
        "role",
        "gameState",
        "remainingPlayers",
        "clientStates",
        "size",
        "searchable",
        "location",
        "similarClientState",
        "killedClient",
        "ghoulClientState",
        "isWinner",
        "err",
        "reasonCode",
        "description",
        "connection",
        "i",
        "similarClientIDs"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "import ClientState from './ClientState.js';\r\nimport GameState from './GameState.js';\r\n\r\nconst http = require('http');\r\nconst url = require('url');\r\nconst uniqid = require('uniqid');\r\nconst WebSocket = require('ws');\r\nlet generateRandomRoomID = require('./RoomIDGenerator.js');\r\n\r\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\r\n\r\n\r\n\r\nconst SERVER_PORT = 8080;\r\n\r\nlet payload_storage = null;\r\nlet activeRoomIDs = [];\r\nlet activeClientStates = [];\r\nlet websocketConnection = null; //stores the websocket object returned by on 'connection'\r\n\r\n/*gameStates holds all of the available GameState objects. They will be indexed\r\nby the roomID. */\r\nlet gameStates = new Map();\r\n\r\n// Set up the HTTP server needed for WS\r\nlet server = http.createServer(function(req, res) {\r\n\r\n}).listen(SERVER_PORT, function() {\r\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\r\n});\r\n\r\n// mount the websockets \"server\" onto the http server\r\nlet wsServer = new WebSocket.Server({\r\n  server: server,\r\n  clientTracking: true\r\n});\r\n\r\n// Register the request handler with the WS server object\r\nwsServer.on('connection', handleWS_onConnection);\r\n\r\n\r\n/* ===== WS Handlers ===== */\r\nfunction handleWS_onConnection(websocket, request) {\r\n\r\n  console.log(`(+(${new Date()}) Connection to ${request.socket.remoteAddress} accepted.`);\r\n\r\n  // client ID will be generated server-side\r\n  let newClientID = uniqid();\r\n\r\n  // it may be better to create a ClientState on connection, let's try that here\r\n  activeClientStates.push(new ClientState(newClientID, null, null, websocket, \"player\"));\r\n\r\n  // register message, error, and close handlers with websocket object\r\n  websocket.on('message', handleWS_onMessage);\r\n  websocket.on('error', handleWS_onError);\r\n  websocket.on('close', handleWS_onClose);\r\n\r\n  // let the client know what their new ID will be\r\n  websocket.send(JSON.stringify({\r\n    action: \"client_id_and_ws_connection_created\",\r\n    clientID: newClientID\r\n  }));\r\n}\r\n\r\nfunction handleWS_onMessage(message) {\r\n\r\n  let jsonPayload = JSON.parse(message);\r\n  let currentClientState = getClientState(jsonPayload.clientID);\r\n\r\n  console.log(`(${new Date()}) Message received: ${message}`);\r\n\r\n\r\n  /* Similar to the client's conditional action monitoring, this set of\r\n  conditionals within the handleWS_onMessage function check the incoming action\r\n  from the client, perform operations according the intercepted action, and return\r\n  any necessary results to the client. */\r\n  if(jsonPayload.action == \"create_room\") {\r\n\r\n    // The client is creating a new room, so generate a new room ID\r\n    let newRoomID = generateRandomRoomID();\r\n    while (activeRoomIDs.includes(newRoomID)) { // don't repeat room IDs\r\n      newRoomID = generateRandomRoomID();\r\n    }\r\n\r\n    /* Create a new GameState object to go along with the new RoomID. Add the\r\n    client that created a room to the GameState's ClientStates list. */\r\n    gameStates.set(newRoomID, new GameState());\r\n    gameStates.get(newRoomID).addClientState(currentClientState);\r\n\r\n    // add the new roomID to the tracking array and update the current ClientState's roomID\r\n    activeRoomIDs.push(newRoomID);\r\n    currentClientState.roomID = newRoomID;\r\n\r\n    // let the client know the operation was successful and give them the new RoomID\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"create_room_successful\",\r\n      roomID: newRoomID\r\n    }));\r\n  }\r\n\r\n\r\n  // a new client has requested to join a room\r\n  if(jsonPayload.action == \"join_room\") {\r\n\r\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\r\n    if (!(activeRoomIDs.includes(jsonPayload.roomID))) {\r\n        // send back a response saying that the roomID is invalid\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"join_room_failed\"\r\n        }));\r\n    }\r\n    else {\r\n\r\n      //If the room is valid, update the RoomID of the current ClientState\r\n      currentClientState.roomID = jsonPayload.roomID;\r\n\r\n      //add client to the correct gameState\r\n      gameStates.get(jsonPayload.roomID).addClientState(currentClientState);\r\n\r\n      /* Let each similar client know that a new player has joined their room. This\r\n      allows each similar client to keep track of each other and allows UI to be\r\n      properly updated on the client side. */\r\n      let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n      for (let clientState of similarClientStates) {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"new_client_joined_room\",\r\n          similarClientID: currentClientState.clientID\r\n        }));\r\n\r\n\r\n      }\r\n\r\n      /* Return a list of similar clients to the current client, so the current\r\n      client may properly update it's UI and know which clients are in the room\r\n      that was just joined */\r\n      currentClientState.websocketConnection.send(JSON.stringify({\r\n        action: \"join_room_successful\",\r\n        roomID: currentClientState.roomID,\r\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  if (jsonPayload.action == \"start_game\") {\r\n\r\n    /* We will need all the similar clients to update their roles and alert them\r\n    that the game has started */\r\n    let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n    console.log(similarClientStates.length);\r\n    let currentAndSimilarClientStates = similarClientStates.concat(currentClientState);\r\n    console.log(currentAndSimilarClientStates[currentAndSimilarClientStates.length-1]);\r\n    // randomly assign one of the clients to be a ghoul\r\n    let randomGhoulIndex = Math.floor(Math.random() * (currentAndSimilarClientStates.length)); // add 1 to account for the currenClient\r\n    console.log(`RandomGhoulIndex: ${randomGhoulIndex}`);\r\n    currentAndSimilarClientStates[randomGhoulIndex].role = \"ghoul\";\r\n\r\n    //initialize remainingPlayers property in GameState\r\n    let gameState = gameStates.get(currentClientState.roomID);\r\n    gameState.remainingPlayers = gameState.clientStates.size - 1; //-2 because ghoul is not a remiaining player\r\n\r\n    // let each similar client know their role and alert them of game start\r\n    for (let clientState of similarClientStates) {\r\n      clientState.websocketConnection.send(JSON.stringify({\r\n        action: \"game_started\",\r\n        role: clientState.role\r\n      }));\r\n    }\r\n\r\n    // alert the current client and also tell the client his role\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"game_started\",\r\n      role: currentClientState.role\r\n    }));\r\n\r\n  }\r\n\r\n\r\n  // ghoul has hidden the treasure. Let users know that they can now play and move around\r\n  if (jsonPayload.action == \"treasure_hidden\") {\r\n\r\n    let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n\r\n    // let each similar client know their role and alert them of game start\r\n    for (let clientState of similarClientStates) {\r\n      clientState.websocketConnection.send(JSON.stringify({\r\n        action: \"allow_player_movement\",\r\n        searchable: jsonPayload.searchable\r\n      }));\r\n    }\r\n\r\n    // alert the current client and also tell the client his role\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"allow_player_movement\",\r\n      searchable: jsonPayload.searchable\r\n    }));\r\n  }\r\n\r\n\r\n\r\n\r\n  /* If a player moves, update the location in their respective ClientState.\r\n  Also, check if a player and ghoul's location coincide with each other. If they\r\n  do, then let the ghoul know he killed a player, and the player know that they\r\n  died. */\r\n  if (jsonPayload.action == \"update_location\") {\r\n\r\n    currentClientState.location = jsonPayload.location;\r\n    let gameState = gameStates.get(currentClientState.roomID);\r\n\r\n    // if the player is the ghoul, compare their location with all players\r\n    let similarClientState = null;\r\n    if (currentClientState.role == \"ghoul\") {\r\n      for (let similarClientID of jsonPayload.similarClients) {\r\n        similarClientState = getClientState(similarClientID);\r\n        if (similarClientState.location == currentClientState.location) { //let player know they were killed\r\n          similarClientState.websocketConnection.send(JSON.stringify({\r\n            action: \"killed_by_ghoul\"\r\n          }));\r\n          currentClientState.websocketConnection.send(JSON.stringify({ //let ghoul know he killed someone\r\n            action: \"killed_a_player\",\r\n            killedClient: similarClientState.clientID\r\n          }));\r\n\r\n          // decrement remainingPlayers each time ghoul kills a player\r\n          gameState.remainingPlayers--;\r\n        }\r\n      }\r\n    }\r\n    // if the player is not a ghoul, compare their location to the ghoul\r\n    else {\r\n      let ghoulClientState = null;\r\n      for(let similarClientID of jsonPayload.similarClients) {\r\n        ghoulClientState = getClientState(similarClientID);\r\n        if (ghoulClientState.role == \"ghoul\") {\r\n          if (currentClientState.location == ghoulClientState.location) {\r\n            currentClientState.websocketConnection.send(JSON.stringify({ //let player know they were killed\r\n              action: \"killed_by_ghoul\"\r\n            }));\r\n            ghoulClientState.websocketConnection.send(JSON.stringify({ //let ghoul know he killed someone\r\n              action: \"killed_a_player\",\r\n              killedClient: similarClientState.clientID\r\n            }));\r\n            gameState.remainingPlayers--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(gameState.remainingPlayers == 0) {\r\n      let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n      //let all clients know that the game is over\r\n      for (let similarClientState of similarClientStates) {\r\n        if (similarClientState.role == \"ghoul\")\r\n          similarClientState.websocketConnection.send(JSON.stringify({\r\n            action: \"game_over_ghoul_wins\",\r\n            isWinner: true\r\n          }));\r\n        else {\r\n          similarClientState.websocketConnection.send(JSON.stringify({\r\n            action: \"game_over_ghoul_wins\",\r\n            isWinner: false\r\n          }));\r\n        }\r\n      }\r\n\r\n      if (currentClientState.role == \"ghoul\") {\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_ghoul_wins\",\r\n          isWinner: true\r\n        }));\r\n      }\r\n      else {\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_ghoul_wins\",\r\n          isWinner: false\r\n        }));\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  if (jsonPayload.action == \"player_wins\") {\r\n\r\n    let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"game_over_player_wins\",\r\n      isWinner: true\r\n    }));\r\n\r\n    for (let clientState of similarClientStates) {\r\n\r\n\r\n      if (clientState.role == \"ghoul\") {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_player_wins\",\r\n          isWinner: false\r\n        }));\r\n      }\r\n      else {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_player_wins\",\r\n          isWinner: true\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction handleWS_onError(err) {\r\n  console.log(`(${new Date()}) Error: ${err}`);\r\n}\r\n\r\nfunction handleWS_onClose(reasonCode, description, connection) {\r\n  console.log((new Date()) + ': Connection closed.');\r\n}\r\n\r\n\r\n// Retrieve a ClientState that matches the given clientID\r\n// Clean this up with For...of loops later...\r\nfunction getClientState(clientID) {\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n    if (activeClientStates[i].clientID == clientID) {\r\n      return activeClientStates[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* Return a list of a ClientStates mactching the given roomID, except for the\r\nClientState that has the same clientID that was passed in as an input param. */\r\nfunction getSimilarClientStates(clientID) {\r\n\r\n  let similarClientStates = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientStates.push(activeClientStates[i]);\r\n    }\r\n  }\r\n\r\n  return similarClientStates;\r\n}\r\n\r\n/* Return a list of a Client IDs corresponding to matching the given roomID. Every\r\nmatching client ID is returned except for the client ID that was passed into the\r\nfunction. */\r\nfunction getSimilarClientIDs(clientID) {\r\n\r\n  let similarClientIDs = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientIDs.push(activeClientStates[i].clientID);\r\n    }\r\n  }\r\n\r\n  return similarClientIDs;\r\n}\r\n\r\n\r\n\r\n\r\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\r\n         /*if (!activeRoomIDs.includes(roomID)) {\r\n           // send back a response saying that the roomID is invalid\r\n         }\r\n         else { //If the room is valid, create a new ClientState to keep track of the new client\r\n           activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n\r\n           // return a list of clientIDs that are also associated with that room\r\n           res.writeHead(200, { 'Content-Type': 'application/json' });\r\n           res.write(JSON.stringify({\r\n             clientsInRoom: clientIDsInRoom()\r\n           }));\r\n         }\r\n    }\r\n\r\n\r\n  }\r\n  else if(req.method == 'POST') {\r\n    console.log('Received an HTTP POST request...');\r\n\r\n    // at some point move this parsing into a helper function\r\n    let body = '';\r\n    req.on('data', function(chunks) {\r\n      body += chunks.toString();\r\n    });\r\n\r\n    req.on('end', function() {\r\n      console.log(`Posted Data: ${body}`);\r\n      console.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n    });\r\n  }\r\n\r\n  res.end();\r\n\r\n});\r\n\r\nserver.listen(SERVER_PORT, function() {\r\n  console.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n\r\n\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\r\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\r\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603923540071
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\ClientState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "ClientState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientState = function ClientState(clientID, roomID, currentLocation, websocketConnection, role) {\n  _classCallCheck(this, ClientState);\n\n  this.clientID = clientID;\n  this.roomID = roomID;\n  this.currentLocation = currentLocation;\n  this.websocketConnection = websocketConnection;\n  this.role = role;\n};\n\nvar _default = ClientState;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudFN0YXRlLmpzIl0sIm5hbWVzIjpbIkNsaWVudFN0YXRlIiwiY2xpZW50SUQiLCJyb29tSUQiLCJjdXJyZW50TG9jYXRpb24iLCJ3ZWJzb2NrZXRDb25uZWN0aW9uIiwicm9sZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQU1BLFcsR0FFSixxQkFBWUMsUUFBWixFQUFzQkMsTUFBdEIsRUFBOEJDLGVBQTlCLEVBQStDQyxtQkFBL0MsRUFBb0VDLElBQXBFLEVBQTBFO0FBQUE7O0FBRXhFLE9BQUtKLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsT0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsT0FBS0MsZUFBTCxHQUF1QkEsZUFBdkI7QUFDQSxPQUFLQyxtQkFBTCxHQUEyQkEsbUJBQTNCO0FBQ0EsT0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBRUQsQzs7ZUFHWUwsVyIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENsaWVudFN0YXRlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoY2xpZW50SUQsIHJvb21JRCwgY3VycmVudExvY2F0aW9uLCB3ZWJzb2NrZXRDb25uZWN0aW9uLCByb2xlKSB7XHJcblxyXG4gICAgdGhpcy5jbGllbnRJRCA9IGNsaWVudElEO1xyXG4gICAgdGhpcy5yb29tSUQgPSByb29tSUQ7XHJcbiAgICB0aGlzLmN1cnJlbnRMb2NhdGlvbiA9IGN1cnJlbnRMb2NhdGlvbjtcclxuICAgIHRoaXMud2Vic29ja2V0Q29ubmVjdGlvbiA9IHdlYnNvY2tldENvbm5lY3Rpb247XHJcbiAgICB0aGlzLnJvbGUgPSByb2xlO1xyXG5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENsaWVudFN0YXRlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ClientState.js"
      ],
      "names": [
        "ClientState",
        "clientID",
        "roomID",
        "currentLocation",
        "websocketConnection",
        "role"
      ],
      "mappings": ";;;;;;;;;IAAMA,W,GAEJ,qBAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,eAA9B,EAA+CC,mBAA/C,EAAoEC,IAApE,EAA0E;AAAA;;AAExE,OAAKJ,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKC,mBAAL,GAA2BA,mBAA3B;AACA,OAAKC,IAAL,GAAYA,IAAZ;AAED,C;;eAGYL,W",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "class ClientState {\r\n\r\n  constructor(clientID, roomID, currentLocation, websocketConnection, role) {\r\n\r\n    this.clientID = clientID;\r\n    this.roomID = roomID;\r\n    this.currentLocation = currentLocation;\r\n    this.websocketConnection = websocketConnection;\r\n    this.role = role;\r\n\r\n  }\r\n}\r\n\r\nexport default ClientState;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603697681033
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\RoomIDGenerator.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "RoomIDGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* Function used to generate random Room IDs*/\n// List of characters that can potentially show up in the Room ID\nvar CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar ROOM_ID_LEN = 6;\n\nfunction generateRandomRoomID() {\n  var roomID = \"\";\n\n  for (var i = 0; i < ROOM_ID_LEN; i++) {\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\n  }\n\n  return roomID;\n}\n\nmodule.exports = generateRandomRoomID;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvb21JREdlbmVyYXRvci5qcyJdLCJuYW1lcyI6WyJDSEFSUyIsIlJPT01fSURfTEVOIiwiZ2VuZXJhdGVSYW5kb21Sb29tSUQiLCJyb29tSUQiLCJpIiwiTWF0aCIsInJvdW5kIiwicmFuZG9tIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBO0FBQ0EsSUFBTUEsS0FBSyxHQUFHLHNDQUFkO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLENBQXBCOztBQUVBLFNBQVNDLG9CQUFULEdBQWdDO0FBRTlCLE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUVBLE9BQUksSUFBSUMsQ0FBQyxHQUFHLENBQVosRUFBZUEsQ0FBQyxHQUFFSCxXQUFsQixFQUErQkcsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQ0QsSUFBQUEsTUFBTSxJQUFJSCxLQUFLLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JQLEtBQUssQ0FBQ1EsTUFBakMsQ0FBRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBT0wsTUFBUDtBQUVEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLG9CQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEZ1bmN0aW9uIHVzZWQgdG8gZ2VuZXJhdGUgcmFuZG9tIFJvb20gSURzKi9cclxuXHJcbi8vIExpc3Qgb2YgY2hhcmFjdGVycyB0aGF0IGNhbiBwb3RlbnRpYWxseSBzaG93IHVwIGluIHRoZSBSb29tIElEXHJcbmNvbnN0IENIQVJTID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtcclxuY29uc3QgUk9PTV9JRF9MRU4gPSA2O1xyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21Sb29tSUQoKSB7XHJcblxyXG4gIGxldCByb29tSUQgPSBcIlwiO1xyXG5cclxuICBmb3IobGV0IGkgPSAwOyBpPCBST09NX0lEX0xFTjsgaSsrKSB7XHJcbiAgICByb29tSUQgKz0gQ0hBUlNbTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogQ0hBUlMubGVuZ3RoKV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcm9vbUlEO1xyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnZW5lcmF0ZVJhbmRvbVJvb21JRDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "RoomIDGenerator.js"
      ],
      "names": [
        "CHARS",
        "ROOM_ID_LEN",
        "generateRandomRoomID",
        "roomID",
        "i",
        "Math",
        "round",
        "random",
        "length",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AAEA;AACA,IAAMA,KAAK,GAAG,sCAAd;AACA,IAAMC,WAAW,GAAG,CAApB;;AAEA,SAASC,oBAAT,GAAgC;AAE9B,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEH,WAAlB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,MAAM,IAAIH,KAAK,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACQ,MAAjC,CAAD,CAAf;AACD;;AAED,SAAOL,MAAP;AAED;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,oBAAjB",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "/* Function used to generate random Room IDs*/\r\n\r\n// List of characters that can potentially show up in the Room ID\r\nconst CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst ROOM_ID_LEN = 6;\r\n\r\nfunction generateRandomRoomID() {\r\n\r\n  let roomID = \"\";\r\n\r\n  for(let i = 0; i< ROOM_ID_LEN; i++) {\r\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\r\n  }\r\n\r\n  return roomID;\r\n\r\n}\r\n\r\nmodule.exports = generateRandomRoomID;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603172583842
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\GameState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "GameState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*The GameState object will keep track of what clients are associated with which\r\nrooms. This will make searching for a certain ClientState much more efficient, as\r\nyou won't have to search through all ClientStates on the server in order to find\r\na certain ClientState. */\nvar GameState = /*#__PURE__*/function () {\n  function GameState() {\n    _classCallCheck(this, GameState);\n\n    this.clientStates = new Map();\n    this.remainingPlayers = 0;\n  }\n\n  _createClass(GameState, [{\n    key: \"addClientState\",\n    value: function addClientState(clientState) {\n      this.clientStates.set(clientState.clientID, clientState);\n    }\n  }, {\n    key: \"getClientState\",\n    value: function getClientState(clientID) {\n      return this.clientStates.get(clientID);\n    }\n  }, {\n    key: \"removeClientState\",\n    value: function removeClientState(clientID) {\n      this.clientStates[\"delete\"](clientID);\n    }\n  }]);\n\n  return GameState;\n}();\n\nvar _default = GameState;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhbWVTdGF0ZS5qcyJdLCJuYW1lcyI6WyJHYW1lU3RhdGUiLCJjbGllbnRTdGF0ZXMiLCJNYXAiLCJyZW1haW5pbmdQbGF5ZXJzIiwiY2xpZW50U3RhdGUiLCJzZXQiLCJjbGllbnRJRCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0lBRU1BLFM7QUFFSix1QkFBYztBQUFBOztBQUVaLFNBQUtDLFlBQUwsR0FBb0IsSUFBSUMsR0FBSixFQUFwQjtBQUNBLFNBQUtDLGdCQUFMLEdBQXdCLENBQXhCO0FBRUQ7Ozs7bUNBRWNDLFcsRUFBYTtBQUUxQixXQUFLSCxZQUFMLENBQWtCSSxHQUFsQixDQUFzQkQsV0FBVyxDQUFDRSxRQUFsQyxFQUE0Q0YsV0FBNUM7QUFFRDs7O21DQUVjRSxRLEVBQVU7QUFFdkIsYUFBTyxLQUFLTCxZQUFMLENBQWtCTSxHQUFsQixDQUFzQkQsUUFBdEIsQ0FBUDtBQUVEOzs7c0NBRWlCQSxRLEVBQVU7QUFFMUIsV0FBS0wsWUFBTCxXQUF5QkssUUFBekI7QUFFRDs7Ozs7O2VBR1lOLFMiLCJzb3VyY2VSb290IjoiRDpcXE15UHJvZ3JhbW1pbmdcXGdob3VsX2h1bnRlcnNcXGdob3VsX2h1bnRlcnNfc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKlRoZSBHYW1lU3RhdGUgb2JqZWN0IHdpbGwga2VlcCB0cmFjayBvZiB3aGF0IGNsaWVudHMgYXJlIGFzc29jaWF0ZWQgd2l0aCB3aGljaFxyXG5yb29tcy4gVGhpcyB3aWxsIG1ha2Ugc2VhcmNoaW5nIGZvciBhIGNlcnRhaW4gQ2xpZW50U3RhdGUgbXVjaCBtb3JlIGVmZmljaWVudCwgYXNcclxueW91IHdvbid0IGhhdmUgdG8gc2VhcmNoIHRocm91Z2ggYWxsIENsaWVudFN0YXRlcyBvbiB0aGUgc2VydmVyIGluIG9yZGVyIHRvIGZpbmRcclxuYSBjZXJ0YWluIENsaWVudFN0YXRlLiAqL1xyXG5cclxuY2xhc3MgR2FtZVN0YXRlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgdGhpcy5jbGllbnRTdGF0ZXMgPSBuZXcgTWFwKCk7XHJcbiAgICB0aGlzLnJlbWFpbmluZ1BsYXllcnMgPSAwO1xyXG5cclxuICB9XHJcblxyXG4gIGFkZENsaWVudFN0YXRlKGNsaWVudFN0YXRlKSB7XHJcblxyXG4gICAgdGhpcy5jbGllbnRTdGF0ZXMuc2V0KGNsaWVudFN0YXRlLmNsaWVudElELCBjbGllbnRTdGF0ZSk7XHJcblxyXG4gIH1cclxuXHJcbiAgZ2V0Q2xpZW50U3RhdGUoY2xpZW50SUQpIHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5jbGllbnRTdGF0ZXMuZ2V0KGNsaWVudElEKTtcclxuXHJcbiAgfVxyXG5cclxuICByZW1vdmVDbGllbnRTdGF0ZShjbGllbnRJRCkge1xyXG5cclxuICAgIHRoaXMuY2xpZW50U3RhdGVzLmRlbGV0ZShjbGllbnRJRCk7XHJcblxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgR2FtZVN0YXRlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "GameState.js"
      ],
      "names": [
        "GameState",
        "clientStates",
        "Map",
        "remainingPlayers",
        "clientState",
        "set",
        "clientID",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;IAEMA,S;AAEJ,uBAAc;AAAA;;AAEZ,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AAED;;;;mCAEcC,W,EAAa;AAE1B,WAAKH,YAAL,CAAkBI,GAAlB,CAAsBD,WAAW,CAACE,QAAlC,EAA4CF,WAA5C;AAED;;;mCAEcE,Q,EAAU;AAEvB,aAAO,KAAKL,YAAL,CAAkBM,GAAlB,CAAsBD,QAAtB,CAAP;AAED;;;sCAEiBA,Q,EAAU;AAE1B,WAAKL,YAAL,WAAyBK,QAAzB;AAED;;;;;;eAGYN,S",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "/*The GameState object will keep track of what clients are associated with which\r\nrooms. This will make searching for a certain ClientState much more efficient, as\r\nyou won't have to search through all ClientStates on the server in order to find\r\na certain ClientState. */\r\n\r\nclass GameState {\r\n\r\n  constructor() {\r\n\r\n    this.clientStates = new Map();\r\n    this.remainingPlayers = 0;\r\n\r\n  }\r\n\r\n  addClientState(clientState) {\r\n\r\n    this.clientStates.set(clientState.clientID, clientState);\r\n\r\n  }\r\n\r\n  getClientState(clientID) {\r\n\r\n    return this.clientStates.get(clientID);\r\n\r\n  }\r\n\r\n  removeClientState(clientID) {\r\n\r\n    this.clientStates.delete(clientID);\r\n\r\n  }\r\n}\r\n\r\nexport default GameState;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603886780404
  }
}