{
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ClientState = _interopRequireDefault(require(\"./ClientState.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar http = require('http');\n\nvar url = require('url');\n\nvar uniqid = require('uniqid');\n\nvar WebSocket = require('ws');\n\nvar generateRandomRoomID = require('./RoomIDGenerator.js');\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\n\n\nvar SERVER_PORT = 8080;\nvar payload_storage = null;\nvar activeRoomIDs = [];\nvar activeClientStates = [];\nvar websocketConnection = null; //stores the websocket object returned by on 'connection'\n// Set up the HTTP server needed for WS\n\nvar server = http.createServer(function (req, res) {}).listen(SERVER_PORT, function () {\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\n}); // mount the websockets \"server\" onto the http server\n\nvar wsServer = new WebSocket.Server({\n  server: server,\n  clientTracking: true\n}); // Register the request handler with the WS server object\n\nwsServer.on('connection', handleWS_onConnection);\n/* ===== WS Handlers ===== */\n\nfunction handleWS_onConnection(websocket, request) {\n  console.log(\"(+(\".concat(new Date(), \") Connection to \").concat(request.socket.remoteAddress, \" accepted.\"));\n  var newClientID = uniqid(); // it may be better to create a ClientState on connection, let's try that here\n\n  activeClientStates.push(new _ClientState[\"default\"](newClientID, null, null, websocket)); // register message, error, and close handlers with websocket object\n\n  websocket.on('message', handleWS_onMessage);\n  websocket.on('error', handleWS_onError);\n  websocket.on('close', handleWS_onClose); // let the client know what their new ID will be\n\n  websocket.send(JSON.stringify({\n    action: \"client_id_and_ws_connection_created\",\n    clientID: newClientID\n  }));\n}\n\nfunction handleWS_onMessage(message) {\n  var jsonPayload = JSON.parse(message);\n  var currentClientState = getClientState(jsonPayload.clientID);\n  console.log(\"(\".concat(new Date(), \") Message received: \").concat(message));\n\n  if (jsonPayload.action == \"create_room\") {\n    // The client is creating a new room, so generate a new room ID\n    var newRoomID = generateRandomRoomID();\n\n    while (activeRoomIDs.includes(newRoomID)) {\n      // don't repeat room IDs\n      newRoomID = generateRandomRoomID();\n    } // add a new ClientState object and the new roomID to the tracking arrays\n\n\n    activeRoomIDs.push(newRoomID);\n    currentClientState.roomID = newRoomID; // let the client know the operation was successful and give them the new RoomID\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"create_room_successful\",\n      roomID: newRoomID\n    }));\n  }\n\n  if (jsonPayload.action == \"join_room\") {\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\n    if (!activeRoomIDs.includes(jsonPayload.roomID)) {\n      // send back a response saying that the roomID is invalid\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_failed\"\n      }));\n    } else {\n      //If the room is valid, create a new ClientState to keep track of the new client\n      currentClientState.roomID = jsonPayload.roomID; // let each similar client know that a new player has joined\n\n      var similarClientStates = getSimilarClientStates(currentClientState.clientID);\n\n      var _iterator = _createForOfIteratorHelper(similarClientStates),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var clientState = _step.value;\n          clientState.websocketConnection.send(JSON.stringify({\n            action: \"new_client_joined_room\",\n            similarClientID: currentClientState.clientID\n          }));\n        } // return a list of similar clients to the current client\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_successful\",\n        roomID: currentClientState.roomID,\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\n      }));\n    }\n  }\n}\n\nfunction handleWS_onError(err) {\n  console.log(\"(\".concat(new Date(), \") Error: \").concat(err));\n}\n\nfunction handleWS_onClose(reasonCode, description, connection) {\n  console.log(new Date() + ': Connection closed.');\n} // Retrieve a ClientState that matches the given clientID\n\n\nfunction getClientState(clientID) {\n  for (var i = 0; i < activeClientStates.length; i++) {\n    if (activeClientStates[i].clientID == clientID) {\n      return activeClientStates[i];\n    }\n  }\n} // return a list of a ClientStates mactching the given roomID\n\n\nfunction getSimilarClientStates(clientID) {\n  var similarClientStates = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientStates.push(activeClientStates[i]);\n    }\n  }\n\n  return similarClientStates;\n} // return a list of a ClientIDs corresponding to matching the given roomID\n\n\nfunction getSimilarClientIDs(clientID) {\n  var similarClientIDs = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientIDs.push(activeClientStates[i].clientID);\n    }\n  }\n\n  return similarClientIDs;\n}\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\n\n/*if (!activeRoomIDs.includes(roomID)) {\r\n  // send back a response saying that the roomID is invalid\r\n}\r\nelse { //If the room is valid, create a new ClientState to keep track of the new client\r\n  activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n    // return a list of clientIDs that are also associated with that room\r\n  res.writeHead(200, { 'Content-Type': 'application/json' });\r\n  res.write(JSON.stringify({\r\n    clientsInRoom: clientIDsInRoom()\r\n  }));\r\n}\r\n}\r\n}\r\nelse if(req.method == 'POST') {\r\nconsole.log('Received an HTTP POST request...');\r\n// at some point move this parsing into a helper function\r\nlet body = '';\r\nreq.on('data', function(chunks) {\r\nbody += chunks.toString();\r\n});\r\nreq.on('end', function() {\r\nconsole.log(`Posted Data: ${body}`);\r\nconsole.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n});\r\n}\r\nres.end();\r\n});\r\nserver.listen(SERVER_PORT, function() {\r\nconsole.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\n\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\n\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJodHRwIiwicmVxdWlyZSIsInVybCIsInVuaXFpZCIsIldlYlNvY2tldCIsImdlbmVyYXRlUmFuZG9tUm9vbUlEIiwiU0VSVkVSX1BPUlQiLCJwYXlsb2FkX3N0b3JhZ2UiLCJhY3RpdmVSb29tSURzIiwiYWN0aXZlQ2xpZW50U3RhdGVzIiwid2Vic29ja2V0Q29ubmVjdGlvbiIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsInJlcSIsInJlcyIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJ3c1NlcnZlciIsIlNlcnZlciIsImNsaWVudFRyYWNraW5nIiwib24iLCJoYW5kbGVXU19vbkNvbm5lY3Rpb24iLCJ3ZWJzb2NrZXQiLCJyZXF1ZXN0IiwiRGF0ZSIsInNvY2tldCIsInJlbW90ZUFkZHJlc3MiLCJuZXdDbGllbnRJRCIsInB1c2giLCJDbGllbnRTdGF0ZSIsImhhbmRsZVdTX29uTWVzc2FnZSIsImhhbmRsZVdTX29uRXJyb3IiLCJoYW5kbGVXU19vbkNsb3NlIiwic2VuZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJhY3Rpb24iLCJjbGllbnRJRCIsIm1lc3NhZ2UiLCJqc29uUGF5bG9hZCIsInBhcnNlIiwiY3VycmVudENsaWVudFN0YXRlIiwiZ2V0Q2xpZW50U3RhdGUiLCJuZXdSb29tSUQiLCJpbmNsdWRlcyIsInJvb21JRCIsInNpbWlsYXJDbGllbnRTdGF0ZXMiLCJnZXRTaW1pbGFyQ2xpZW50U3RhdGVzIiwiY2xpZW50U3RhdGUiLCJzaW1pbGFyQ2xpZW50SUQiLCJzaW1pbGFyQ2xpZW50cyIsImdldFNpbWlsYXJDbGllbnRJRHMiLCJlcnIiLCJyZWFzb25Db2RlIiwiZGVzY3JpcHRpb24iLCJjb25uZWN0aW9uIiwiaSIsImxlbmd0aCIsInNpbWlsYXJDbGllbnRJRHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDbGllbnRTdGF0ZSBmcm9tICcuL0NsaWVudFN0YXRlLmpzJztcclxuXHJcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XHJcbmNvbnN0IHVybCA9IHJlcXVpcmUoJ3VybCcpO1xyXG5jb25zdCB1bmlxaWQgPSByZXF1aXJlKCd1bmlxaWQnKTtcclxuY29uc3QgV2ViU29ja2V0ID0gcmVxdWlyZSgnd3MnKTtcclxubGV0IGdlbmVyYXRlUmFuZG9tUm9vbUlEID0gcmVxdWlyZSgnLi9Sb29tSURHZW5lcmF0b3IuanMnKTtcclxuXHJcbi8qKioqKiBJIGFtIGludHJvZHVjaW5nIHNvbWUgdGVybWlub2xvZ3kgaGVyZTpcclxuXHJcblNpbWlsYXIgQ2xpZW50czogY2xpZW50cyB3aXRoaW4gdGhlIHNhbWUgcm9vbSBhcyB0aGUgY3VycmVudCBDbGllbnRcclxuXHJcblRoaXMgd2lsbCBtYWtlIG5hbWluZyBteSBmdW5jdGlvbnMgZWFzaWVyLi4uICoqKioqL1xyXG5cclxuXHJcblxyXG5jb25zdCBTRVJWRVJfUE9SVCA9IDgwODA7XHJcblxyXG5sZXQgcGF5bG9hZF9zdG9yYWdlID0gbnVsbDtcclxubGV0IGFjdGl2ZVJvb21JRHMgPSBbXTtcclxubGV0IGFjdGl2ZUNsaWVudFN0YXRlcyA9IFtdO1xyXG5sZXQgd2Vic29ja2V0Q29ubmVjdGlvbiA9IG51bGw7IC8vc3RvcmVzIHRoZSB3ZWJzb2NrZXQgb2JqZWN0IHJldHVybmVkIGJ5IG9uICdjb25uZWN0aW9uJ1xyXG5cclxuLy8gU2V0IHVwIHRoZSBIVFRQIHNlcnZlciBuZWVkZWQgZm9yIFdTXHJcbmxldCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihmdW5jdGlvbihyZXEsIHJlcykge1xyXG5cclxufSkubGlzdGVuKFNFUlZFUl9QT1JULCBmdW5jdGlvbigpIHtcclxuICBjb25zb2xlLmxvZyhcIlNlcnZlciBpcyBub3cgbGlzdGVuaW5nIG9uIHBvcnQgXCIgKyBTRVJWRVJfUE9SVCk7XHJcbn0pO1xyXG5cclxuLy8gbW91bnQgdGhlIHdlYnNvY2tldHMgXCJzZXJ2ZXJcIiBvbnRvIHRoZSBodHRwIHNlcnZlclxyXG5sZXQgd3NTZXJ2ZXIgPSBuZXcgV2ViU29ja2V0LlNlcnZlcih7XHJcbiAgc2VydmVyOiBzZXJ2ZXIsXHJcbiAgY2xpZW50VHJhY2tpbmc6IHRydWVcclxufSk7XHJcblxyXG4vLyBSZWdpc3RlciB0aGUgcmVxdWVzdCBoYW5kbGVyIHdpdGggdGhlIFdTIHNlcnZlciBvYmplY3Rcclxud3NTZXJ2ZXIub24oJ2Nvbm5lY3Rpb24nLCBoYW5kbGVXU19vbkNvbm5lY3Rpb24pO1xyXG5cclxuXHJcbi8qID09PT09IFdTIEhhbmRsZXJzID09PT09ICovXHJcbmZ1bmN0aW9uIGhhbmRsZVdTX29uQ29ubmVjdGlvbih3ZWJzb2NrZXQsIHJlcXVlc3QpIHtcclxuXHJcbiAgY29uc29sZS5sb2coYCgrKCR7bmV3IERhdGUoKX0pIENvbm5lY3Rpb24gdG8gJHtyZXF1ZXN0LnNvY2tldC5yZW1vdGVBZGRyZXNzfSBhY2NlcHRlZC5gKTtcclxuXHJcbiAgbGV0IG5ld0NsaWVudElEID0gdW5pcWlkKCk7XHJcblxyXG4gIC8vIGl0IG1heSBiZSBiZXR0ZXIgdG8gY3JlYXRlIGEgQ2xpZW50U3RhdGUgb24gY29ubmVjdGlvbiwgbGV0J3MgdHJ5IHRoYXQgaGVyZVxyXG4gIGFjdGl2ZUNsaWVudFN0YXRlcy5wdXNoKG5ldyBDbGllbnRTdGF0ZShuZXdDbGllbnRJRCwgbnVsbCwgbnVsbCwgd2Vic29ja2V0KSk7XHJcblxyXG4gIC8vIHJlZ2lzdGVyIG1lc3NhZ2UsIGVycm9yLCBhbmQgY2xvc2UgaGFuZGxlcnMgd2l0aCB3ZWJzb2NrZXQgb2JqZWN0XHJcbiAgd2Vic29ja2V0Lm9uKCdtZXNzYWdlJywgaGFuZGxlV1Nfb25NZXNzYWdlKTtcclxuICB3ZWJzb2NrZXQub24oJ2Vycm9yJywgaGFuZGxlV1Nfb25FcnJvcik7XHJcbiAgd2Vic29ja2V0Lm9uKCdjbG9zZScsIGhhbmRsZVdTX29uQ2xvc2UpO1xyXG5cclxuICAvLyBsZXQgdGhlIGNsaWVudCBrbm93IHdoYXQgdGhlaXIgbmV3IElEIHdpbGwgYmVcclxuICB3ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICBhY3Rpb246IFwiY2xpZW50X2lkX2FuZF93c19jb25uZWN0aW9uX2NyZWF0ZWRcIixcclxuICAgIGNsaWVudElEOiBuZXdDbGllbnRJRFxyXG4gIH0pKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlV1Nfb25NZXNzYWdlKG1lc3NhZ2UpIHtcclxuXHJcbiAgbGV0IGpzb25QYXlsb2FkID0gSlNPTi5wYXJzZShtZXNzYWdlKTtcclxuICBsZXQgY3VycmVudENsaWVudFN0YXRlID0gZ2V0Q2xpZW50U3RhdGUoanNvblBheWxvYWQuY2xpZW50SUQpO1xyXG5cclxuICBjb25zb2xlLmxvZyhgKCR7bmV3IERhdGUoKX0pIE1lc3NhZ2UgcmVjZWl2ZWQ6ICR7bWVzc2FnZX1gKTtcclxuXHJcbiAgaWYoanNvblBheWxvYWQuYWN0aW9uID09IFwiY3JlYXRlX3Jvb21cIikge1xyXG5cclxuICAgIC8vIFRoZSBjbGllbnQgaXMgY3JlYXRpbmcgYSBuZXcgcm9vbSwgc28gZ2VuZXJhdGUgYSBuZXcgcm9vbSBJRFxyXG4gICAgbGV0IG5ld1Jvb21JRCA9IGdlbmVyYXRlUmFuZG9tUm9vbUlEKCk7XHJcbiAgICB3aGlsZSAoYWN0aXZlUm9vbUlEcy5pbmNsdWRlcyhuZXdSb29tSUQpKSB7IC8vIGRvbid0IHJlcGVhdCByb29tIElEc1xyXG4gICAgICBuZXdSb29tSUQgPSBnZW5lcmF0ZVJhbmRvbVJvb21JRCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGFkZCBhIG5ldyBDbGllbnRTdGF0ZSBvYmplY3QgYW5kIHRoZSBuZXcgcm9vbUlEIHRvIHRoZSB0cmFja2luZyBhcnJheXNcclxuICAgIGFjdGl2ZVJvb21JRHMucHVzaChuZXdSb29tSUQpO1xyXG4gICAgY3VycmVudENsaWVudFN0YXRlLnJvb21JRCA9IG5ld1Jvb21JRDtcclxuXHJcbiAgICAvLyBsZXQgdGhlIGNsaWVudCBrbm93IHRoZSBvcGVyYXRpb24gd2FzIHN1Y2Nlc3NmdWwgYW5kIGdpdmUgdGhlbSB0aGUgbmV3IFJvb21JRFxyXG4gICAgY3VycmVudENsaWVudFN0YXRlLndlYnNvY2tldENvbm5lY3Rpb24uc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIGFjdGlvbjogXCJjcmVhdGVfcm9vbV9zdWNjZXNzZnVsXCIsXHJcbiAgICAgIHJvb21JRDogbmV3Um9vbUlEXHJcbiAgICB9KSk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIGlmKGpzb25QYXlsb2FkLmFjdGlvbiA9PSBcImpvaW5fcm9vbVwiKSB7XHJcblxyXG4gICAgLyogU2luY2UgdGhlIGNsaWVudCBpcyBqb2luaW5nIGEgcm9vbSwgbWFrZSBzdXJlIHRoYXQgdGhlIGdpdmVuIHJvb21JRCBpcyBhY3RpdmUuXHJcbiAgICBJZiBpdCBpcyBub3QgYWN0aXZlLCBsZXQgdGhlIGNsaWVudCBrbm93LiAqL1xyXG4gICAgaWYgKCEoYWN0aXZlUm9vbUlEcy5pbmNsdWRlcyhqc29uUGF5bG9hZC5yb29tSUQpKSkge1xyXG4gICAgICAgIC8vIHNlbmQgYmFjayBhIHJlc3BvbnNlIHNheWluZyB0aGF0IHRoZSByb29tSUQgaXMgaW52YWxpZFxyXG4gICAgICAgIGN1cnJlbnRDbGllbnRTdGF0ZS53ZWJzb2NrZXRDb25uZWN0aW9uLnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgYWN0aW9uOiBcImpvaW5fcm9vbV9mYWlsZWRcIlxyXG4gICAgICAgIH0pKTtcclxuICAgIH1cclxuICAgIGVsc2UgeyAvL0lmIHRoZSByb29tIGlzIHZhbGlkLCBjcmVhdGUgYSBuZXcgQ2xpZW50U3RhdGUgdG8ga2VlcCB0cmFjayBvZiB0aGUgbmV3IGNsaWVudFxyXG4gICAgICBjdXJyZW50Q2xpZW50U3RhdGUucm9vbUlEID0ganNvblBheWxvYWQucm9vbUlEO1xyXG5cclxuICAgICAgLy8gbGV0IGVhY2ggc2ltaWxhciBjbGllbnQga25vdyB0aGF0IGEgbmV3IHBsYXllciBoYXMgam9pbmVkXHJcbiAgICAgIGxldCBzaW1pbGFyQ2xpZW50U3RhdGVzID0gZ2V0U2ltaWxhckNsaWVudFN0YXRlcyhjdXJyZW50Q2xpZW50U3RhdGUuY2xpZW50SUQpO1xyXG5cclxuICAgICAgZm9yIChsZXQgY2xpZW50U3RhdGUgb2Ygc2ltaWxhckNsaWVudFN0YXRlcykge1xyXG4gICAgICAgIGNsaWVudFN0YXRlLndlYnNvY2tldENvbm5lY3Rpb24uc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBhY3Rpb246IFwibmV3X2NsaWVudF9qb2luZWRfcm9vbVwiLFxyXG4gICAgICAgICAgc2ltaWxhckNsaWVudElEOiBjdXJyZW50Q2xpZW50U3RhdGUuY2xpZW50SURcclxuICAgICAgICB9KSk7XHJcblxyXG5cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gcmV0dXJuIGEgbGlzdCBvZiBzaW1pbGFyIGNsaWVudHMgdG8gdGhlIGN1cnJlbnQgY2xpZW50XHJcbiAgICAgIGN1cnJlbnRDbGllbnRTdGF0ZS53ZWJzb2NrZXRDb25uZWN0aW9uLnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGFjdGlvbjogXCJqb2luX3Jvb21fc3VjY2Vzc2Z1bFwiLFxyXG4gICAgICAgIHJvb21JRDogY3VycmVudENsaWVudFN0YXRlLnJvb21JRCxcclxuICAgICAgICBzaW1pbGFyQ2xpZW50czogZ2V0U2ltaWxhckNsaWVudElEcyhjdXJyZW50Q2xpZW50U3RhdGUuY2xpZW50SUQpXHJcbiAgICAgIH0pKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlV1Nfb25FcnJvcihlcnIpIHtcclxuICBjb25zb2xlLmxvZyhgKCR7bmV3IERhdGUoKX0pIEVycm9yOiAke2Vycn1gKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlV1Nfb25DbG9zZShyZWFzb25Db2RlLCBkZXNjcmlwdGlvbiwgY29ubmVjdGlvbikge1xyXG4gIGNvbnNvbGUubG9nKChuZXcgRGF0ZSgpKSArICc6IENvbm5lY3Rpb24gY2xvc2VkLicpO1xyXG59XHJcblxyXG5cclxuLy8gUmV0cmlldmUgYSBDbGllbnRTdGF0ZSB0aGF0IG1hdGNoZXMgdGhlIGdpdmVuIGNsaWVudElEXHJcbmZ1bmN0aW9uIGdldENsaWVudFN0YXRlKGNsaWVudElEKSB7XHJcbiAgZm9yIChsZXQgaT0wOyBpPGFjdGl2ZUNsaWVudFN0YXRlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgaWYgKGFjdGl2ZUNsaWVudFN0YXRlc1tpXS5jbGllbnRJRCA9PSBjbGllbnRJRCkge1xyXG4gICAgICByZXR1cm4gYWN0aXZlQ2xpZW50U3RhdGVzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuXHJcbi8vIHJldHVybiBhIGxpc3Qgb2YgYSBDbGllbnRTdGF0ZXMgbWFjdGNoaW5nIHRoZSBnaXZlbiByb29tSURcclxuZnVuY3Rpb24gZ2V0U2ltaWxhckNsaWVudFN0YXRlcyhjbGllbnRJRCkge1xyXG5cclxuICBsZXQgc2ltaWxhckNsaWVudFN0YXRlcyA9IFtdO1xyXG4gIGxldCBjdXJyZW50Q2xpZW50U3RhdGUgPSBnZXRDbGllbnRTdGF0ZShjbGllbnRJRCk7XHJcblxyXG4gIGZvciAobGV0IGk9MDsgaTxhY3RpdmVDbGllbnRTdGF0ZXMubGVuZ3RoOyBpKyspIHtcclxuXHJcbiAgICAvLyB3ZSB3YW50IHRvIGluY2x1ZGUgZXZlcnkgQ2xpZW50U3RhdGUgd2l0aCB0aGUgc2FtZSByb29tSUQgZXhjZXB0IGZvciB0aGUgb25lIHdpdGggdGhlIGdpdmVuIGNsaWVudElEXHJcbiAgICBpZiAoYWN0aXZlQ2xpZW50U3RhdGVzW2ldLnJvb21JRCA9PSBjdXJyZW50Q2xpZW50U3RhdGUucm9vbUlEICYmIGFjdGl2ZUNsaWVudFN0YXRlc1tpXS5jbGllbnRJRCAhPSBjbGllbnRJRCkge1xyXG4gICAgICBzaW1pbGFyQ2xpZW50U3RhdGVzLnB1c2goYWN0aXZlQ2xpZW50U3RhdGVzW2ldKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBzaW1pbGFyQ2xpZW50U3RhdGVzO1xyXG59XHJcblxyXG4vLyByZXR1cm4gYSBsaXN0IG9mIGEgQ2xpZW50SURzIGNvcnJlc3BvbmRpbmcgdG8gbWF0Y2hpbmcgdGhlIGdpdmVuIHJvb21JRFxyXG5mdW5jdGlvbiBnZXRTaW1pbGFyQ2xpZW50SURzKGNsaWVudElEKSB7XHJcblxyXG4gIGxldCBzaW1pbGFyQ2xpZW50SURzID0gW107XHJcbiAgbGV0IGN1cnJlbnRDbGllbnRTdGF0ZSA9IGdldENsaWVudFN0YXRlKGNsaWVudElEKTtcclxuXHJcbiAgZm9yIChsZXQgaT0wOyBpPGFjdGl2ZUNsaWVudFN0YXRlcy5sZW5ndGg7IGkrKykge1xyXG5cclxuICAgIC8vIHdlIHdhbnQgdG8gaW5jbHVkZSBldmVyeSBDbGllbnRTdGF0ZSB3aXRoIHRoZSBzYW1lIHJvb21JRCBleGNlcHQgZm9yIHRoZSBvbmUgd2l0aCB0aGUgZ2l2ZW4gY2xpZW50SURcclxuICAgIGlmIChhY3RpdmVDbGllbnRTdGF0ZXNbaV0ucm9vbUlEID09IGN1cnJlbnRDbGllbnRTdGF0ZS5yb29tSUQgJiYgYWN0aXZlQ2xpZW50U3RhdGVzW2ldLmNsaWVudElEICE9IGNsaWVudElEKSB7XHJcbiAgICAgIHNpbWlsYXJDbGllbnRJRHMucHVzaChhY3RpdmVDbGllbnRTdGF0ZXNbaV0uY2xpZW50SUQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHNpbWlsYXJDbGllbnRJRHM7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi8qbGV0IHBhdGhuYW1lID0gdXJsLnBhcnNlKHJlcS51cmwpLnBhdGhuYW1lO1xyXG4gIGxldCBxdWVyeSA9IHVybC5wYXJzZShyZXEudXJsLCB0cnVlKS5xdWVyeTtcclxuXHJcbiAgZW5hYmxlX0NPUlMocmVzKTtcclxuXHJcbiAgaWYgKHJlcS5tZXRob2QgPT0gJ0dFVCcpIHtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgYW4gSFRUUCBHRVQgcmVxdWVzdC4uLicpO1xyXG5cclxuICAgIC8vIFwiSG9zdCBhIGdhbWVcIiBidXR0b24gaXMgcHJlc3NlZCBvbiB0aGUgY2xpZW50IHNpZGVcclxuICAgIGlmKHBhdGhuYW1lID09PSBcIi9jcmVhdGVfcm9vbVwiKSB7XHJcblxyXG5cclxuXHJcbiAgICAgIC8vIExldCB0aGUgY2xpZW50LXNpZGUga25vdyB0aGF0IHRoZSBvcGVyYXRpb24gd2FzIHN1Y2Nlc3NmdWxcclxuICAgICAgcmVzLndyaXRlSGVhZCgyMDAsIHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9KTtcclxuICAgICAgcmVzLndyaXRlKEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICByb29tSUQ6IG5ld1Jvb21JRFxyXG4gICAgICB9KSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGlmIChwYXRobmFtZSA9PT0gXCIvam9pbl9yb29tXCIpIHtcclxuXHJcbiAgICAgIC8qIFNpbmNlIHRoZSBjbGllbnQgaXMgam9pbmluZyBhIHJvb20sIG1ha2Ugc3VyZSB0aGF0IHRoZSBnaXZlbiByb29tSUQgaXMgYWN0aXZlLlxyXG4gICAgICAgICBJZiBpdCBpcyBub3QgYWN0aXZlLCBsZXQgdGhlIGNsaWVudCBrbm93LiAqL1xyXG4gICAgICAgICAvKmlmICghYWN0aXZlUm9vbUlEcy5pbmNsdWRlcyhyb29tSUQpKSB7XHJcbiAgICAgICAgICAgLy8gc2VuZCBiYWNrIGEgcmVzcG9uc2Ugc2F5aW5nIHRoYXQgdGhlIHJvb21JRCBpcyBpbnZhbGlkXHJcbiAgICAgICAgIH1cclxuICAgICAgICAgZWxzZSB7IC8vSWYgdGhlIHJvb20gaXMgdmFsaWQsIGNyZWF0ZSBhIG5ldyBDbGllbnRTdGF0ZSB0byBrZWVwIHRyYWNrIG9mIHRoZSBuZXcgY2xpZW50XHJcbiAgICAgICAgICAgYWN0aXZlQ2xpZW50U3RhdGVzLnB1c2gobmV3IENsaWVudFN0YXRlKHF1ZXJ5LmNsaWVudElELCByb29tSUQsIG51bGwpKTtcclxuXHJcbiAgICAgICAgICAgLy8gcmV0dXJuIGEgbGlzdCBvZiBjbGllbnRJRHMgdGhhdCBhcmUgYWxzbyBhc3NvY2lhdGVkIHdpdGggdGhhdCByb29tXHJcbiAgICAgICAgICAgcmVzLndyaXRlSGVhZCgyMDAsIHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9KTtcclxuICAgICAgICAgICByZXMud3JpdGUoSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgY2xpZW50c0luUm9vbTogY2xpZW50SURzSW5Sb29tKClcclxuICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gIH1cclxuICBlbHNlIGlmKHJlcS5tZXRob2QgPT0gJ1BPU1QnKSB7XHJcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgYW4gSFRUUCBQT1NUIHJlcXVlc3QuLi4nKTtcclxuXHJcbiAgICAvLyBhdCBzb21lIHBvaW50IG1vdmUgdGhpcyBwYXJzaW5nIGludG8gYSBoZWxwZXIgZnVuY3Rpb25cclxuICAgIGxldCBib2R5ID0gJyc7XHJcbiAgICByZXEub24oJ2RhdGEnLCBmdW5jdGlvbihjaHVua3MpIHtcclxuICAgICAgYm9keSArPSBjaHVua3MudG9TdHJpbmcoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJlcS5vbignZW5kJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBQb3N0ZWQgRGF0YTogJHtib2R5fWApO1xyXG4gICAgICBjb25zb2xlLmxvZyhgUGFyc2VkIEpzb246ICR7SlNPTi5wYXJzZShib2R5KVtcImxvY2F0aW9uXCJdfWApXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJlcy5lbmQoKTtcclxuXHJcbn0pO1xyXG5cclxuc2VydmVyLmxpc3RlbihTRVJWRVJfUE9SVCwgZnVuY3Rpb24oKSB7XHJcbiAgY29uc29sZS5sb2coYFNlcnZlciBpcyBub3cgbGlzdGVuaW5nIG9uIHBvcnQgJHtTRVJWRVJfUE9SVH1gKTtcclxufSk7XHJcblxyXG5cclxuLyogVGhpcyBzZXQgb2Ygc3RhdGVtZW50cyBhbGxvd3MgdGhlIGNsaWVudCB0byB0YWxrIHRvIHRoZSB0ZXN0IHNlcnZlci5cclxuQ09SUyB3aWxsIGdpdmUgeW91IGlzc3VlcyBvdGhlcndpc2UuICovXHJcbi8qZnVuY3Rpb24gZW5hYmxlX0NPUlMocmVzKSB7XHJcblxyXG4gIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICcqJyk7XHJcblx0cmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2QnLCAnKicpO1xyXG5cdHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnT1BUSU9OUywgR0VUJyk7XHJcblx0cmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICcqJyk7XHJcbn1cclxuXHJcbi8qIFJldHVybnMgYW4gYXJyYXkgb2YgY2xpZW50SURzIGluIGEgZ2l2ZW4gcm9vbS4gVGhpcyBpbmZvcm1hdGlvbiB3aWxsIGJlIHVzZWRcclxub24gdGhlIGNsaWVudCBzaWRlIHNvIHRoYXQgdGhlIHVzZXIgY2FuIHNlZSB0aGUgb3RoZXIgcGxheWVycyBpbiB0aGUgcm9vbSovXHJcbi8qZnVuY3Rpb24gY2xpZW50SURzSW5Sb29tKHJvb21JRCkge1xyXG5cclxuICBsZXQgY2xpZW50c0luUm9vbSA9IFtdO1xyXG4gIGZvciAoY29uc3QgY2xpZW50U3RhdGUgaW4gYWN0aXZlQ2xpZW50U3RhdGVzKSB7XHJcbiAgICBpZiAoY2xpZW50U3RhdGVbJ3Jvb21JRCddID09IHJvb21JRCkge1xyXG4gICAgICBjbGllbnRzSW5Sb29tLnB1c2goY2xpZW50U3RhdGVbJ2NsaWVudElEJ10pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGNsaWVudHNJblJvb207XHJcbn0qL1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "http",
        "require",
        "url",
        "uniqid",
        "WebSocket",
        "generateRandomRoomID",
        "SERVER_PORT",
        "payload_storage",
        "activeRoomIDs",
        "activeClientStates",
        "websocketConnection",
        "server",
        "createServer",
        "req",
        "res",
        "listen",
        "console",
        "log",
        "wsServer",
        "Server",
        "clientTracking",
        "on",
        "handleWS_onConnection",
        "websocket",
        "request",
        "Date",
        "socket",
        "remoteAddress",
        "newClientID",
        "push",
        "ClientState",
        "handleWS_onMessage",
        "handleWS_onError",
        "handleWS_onClose",
        "send",
        "JSON",
        "stringify",
        "action",
        "clientID",
        "message",
        "jsonPayload",
        "parse",
        "currentClientState",
        "getClientState",
        "newRoomID",
        "includes",
        "roomID",
        "similarClientStates",
        "getSimilarClientStates",
        "clientState",
        "similarClientID",
        "similarClients",
        "getSimilarClientIDs",
        "err",
        "reasonCode",
        "description",
        "connection",
        "i",
        "length",
        "similarClientIDs"
      ],
      "mappings": ";;AAAA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,IAAD,CAAzB;;AACA,IAAII,oBAAoB,GAAGJ,OAAO,CAAC,sBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;;;AAIA,IAAMK,WAAW,GAAG,IAApB;AAEA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,mBAAmB,GAAG,IAA1B,C,CAAgC;AAEhC;;AACA,IAAIC,MAAM,GAAGX,IAAI,CAACY,YAAL,CAAkB,UAASC,GAAT,EAAcC,GAAd,EAAmB,CAEjD,CAFY,EAEVC,MAFU,CAEHT,WAFG,EAEU,YAAW;AAChCU,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCX,WAAjD;AACD,CAJY,CAAb,C,CAMA;;AACA,IAAIY,QAAQ,GAAG,IAAId,SAAS,CAACe,MAAd,CAAqB;AAClCR,EAAAA,MAAM,EAAEA,MAD0B;AAElCS,EAAAA,cAAc,EAAE;AAFkB,CAArB,CAAf,C,CAKA;;AACAF,QAAQ,CAACG,EAAT,CAAY,YAAZ,EAA0BC,qBAA1B;AAGA;;AACA,SAASA,qBAAT,CAA+BC,SAA/B,EAA0CC,OAA1C,EAAmD;AAEjDR,EAAAA,OAAO,CAACC,GAAR,cAAkB,IAAIQ,IAAJ,EAAlB,6BAA+CD,OAAO,CAACE,MAAR,CAAeC,aAA9D;AAEA,MAAIC,WAAW,GAAGzB,MAAM,EAAxB,CAJiD,CAMjD;;AACAM,EAAAA,kBAAkB,CAACoB,IAAnB,CAAwB,IAAIC,uBAAJ,CAAgBF,WAAhB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyCL,SAAzC,CAAxB,EAPiD,CASjD;;AACAA,EAAAA,SAAS,CAACF,EAAV,CAAa,SAAb,EAAwBU,kBAAxB;AACAR,EAAAA,SAAS,CAACF,EAAV,CAAa,OAAb,EAAsBW,gBAAtB;AACAT,EAAAA,SAAS,CAACF,EAAV,CAAa,OAAb,EAAsBY,gBAAtB,EAZiD,CAcjD;;AACAV,EAAAA,SAAS,CAACW,IAAV,CAAeC,IAAI,CAACC,SAAL,CAAe;AAC5BC,IAAAA,MAAM,EAAE,qCADoB;AAE5BC,IAAAA,QAAQ,EAAEV;AAFkB,GAAf,CAAf;AAID;;AAED,SAASG,kBAAT,CAA4BQ,OAA5B,EAAqC;AAEnC,MAAIC,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAWF,OAAX,CAAlB;AACA,MAAIG,kBAAkB,GAAGC,cAAc,CAACH,WAAW,CAACF,QAAb,CAAvC;AAEAtB,EAAAA,OAAO,CAACC,GAAR,YAAgB,IAAIQ,IAAJ,EAAhB,iCAAiDc,OAAjD;;AAEA,MAAGC,WAAW,CAACH,MAAZ,IAAsB,aAAzB,EAAwC;AAEtC;AACA,QAAIO,SAAS,GAAGvC,oBAAoB,EAApC;;AACA,WAAOG,aAAa,CAACqC,QAAd,CAAuBD,SAAvB,CAAP,EAA0C;AAAE;AAC1CA,MAAAA,SAAS,GAAGvC,oBAAoB,EAAhC;AACD,KANqC,CAQtC;;;AACAG,IAAAA,aAAa,CAACqB,IAAd,CAAmBe,SAAnB;AACAF,IAAAA,kBAAkB,CAACI,MAAnB,GAA4BF,SAA5B,CAVsC,CAYtC;;AACAF,IAAAA,kBAAkB,CAAChC,mBAAnB,CAAuCwB,IAAvC,CAA4CC,IAAI,CAACC,SAAL,CAAe;AACzDC,MAAAA,MAAM,EAAE,wBADiD;AAEzDS,MAAAA,MAAM,EAAEF;AAFiD,KAAf,CAA5C;AAID;;AAID,MAAGJ,WAAW,CAACH,MAAZ,IAAsB,WAAzB,EAAsC;AAEpC;AACJ;AACI,QAAI,CAAE7B,aAAa,CAACqC,QAAd,CAAuBL,WAAW,CAACM,MAAnC,CAAN,EAAmD;AAC/C;AACAJ,MAAAA,kBAAkB,CAAChC,mBAAnB,CAAuCwB,IAAvC,CAA4CC,IAAI,CAACC,SAAL,CAAe;AACzDC,QAAAA,MAAM,EAAE;AADiD,OAAf,CAA5C;AAGH,KALD,MAMK;AAAE;AACLK,MAAAA,kBAAkB,CAACI,MAAnB,GAA4BN,WAAW,CAACM,MAAxC,CADG,CAGH;;AACA,UAAIC,mBAAmB,GAAGC,sBAAsB,CAACN,kBAAkB,CAACJ,QAApB,CAAhD;;AAJG,iDAMqBS,mBANrB;AAAA;;AAAA;AAMH,4DAA6C;AAAA,cAApCE,WAAoC;AAC3CA,UAAAA,WAAW,CAACvC,mBAAZ,CAAgCwB,IAAhC,CAAqCC,IAAI,CAACC,SAAL,CAAe;AAClDC,YAAAA,MAAM,EAAE,wBAD0C;AAElDa,YAAAA,eAAe,EAAER,kBAAkB,CAACJ;AAFc,WAAf,CAArC;AAMD,SAbE,CAeH;;AAfG;AAAA;AAAA;AAAA;AAAA;;AAgBHI,MAAAA,kBAAkB,CAAChC,mBAAnB,CAAuCwB,IAAvC,CAA4CC,IAAI,CAACC,SAAL,CAAe;AACzDC,QAAAA,MAAM,EAAE,sBADiD;AAEzDS,QAAAA,MAAM,EAAEJ,kBAAkB,CAACI,MAF8B;AAGzDK,QAAAA,cAAc,EAAEC,mBAAmB,CAACV,kBAAkB,CAACJ,QAApB;AAHsB,OAAf,CAA5C;AAKD;AACF;AAGF;;AAED,SAASN,gBAAT,CAA0BqB,GAA1B,EAA+B;AAC7BrC,EAAAA,OAAO,CAACC,GAAR,YAAgB,IAAIQ,IAAJ,EAAhB,sBAAsC4B,GAAtC;AACD;;AAED,SAASpB,gBAAT,CAA0BqB,UAA1B,EAAsCC,WAAtC,EAAmDC,UAAnD,EAA+D;AAC7DxC,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAIQ,IAAJ,EAAD,GAAe,sBAA3B;AACD,C,CAGD;;;AACA,SAASkB,cAAT,CAAwBL,QAAxB,EAAkC;AAChC,OAAK,IAAImB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAChD,kBAAkB,CAACiD,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,QAAIhD,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBnB,QAAtB,IAAkCA,QAAtC,EAAgD;AAC9C,aAAO7B,kBAAkB,CAACgD,CAAD,CAAzB;AACD;AACF;AACF,C,CAGD;;;AACA,SAAST,sBAAT,CAAgCV,QAAhC,EAA0C;AAExC,MAAIS,mBAAmB,GAAG,EAA1B;AACA,MAAIL,kBAAkB,GAAGC,cAAc,CAACL,QAAD,CAAvC;;AAEA,OAAK,IAAImB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAChD,kBAAkB,CAACiD,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAE9C;AACA,QAAIhD,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBX,MAAtB,IAAgCJ,kBAAkB,CAACI,MAAnD,IAA6DrC,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBnB,QAAtB,IAAkCA,QAAnG,EAA6G;AAC3GS,MAAAA,mBAAmB,CAAClB,IAApB,CAAyBpB,kBAAkB,CAACgD,CAAD,CAA3C;AACD;AACF;;AAED,SAAOV,mBAAP;AACD,C,CAED;;;AACA,SAASK,mBAAT,CAA6Bd,QAA7B,EAAuC;AAErC,MAAIqB,gBAAgB,GAAG,EAAvB;AACA,MAAIjB,kBAAkB,GAAGC,cAAc,CAACL,QAAD,CAAvC;;AAEA,OAAK,IAAImB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAChD,kBAAkB,CAACiD,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAE9C;AACA,QAAIhD,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBX,MAAtB,IAAgCJ,kBAAkB,CAACI,MAAnD,IAA6DrC,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBnB,QAAtB,IAAkCA,QAAnG,EAA6G;AAC3GqB,MAAAA,gBAAgB,CAAC9B,IAAjB,CAAsBpB,kBAAkB,CAACgD,CAAD,CAAlB,CAAsBnB,QAA5C;AACD;AACF;;AAED,SAAOqB,gBAAP;AACD;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "import ClientState from './ClientState.js';\r\n\r\nconst http = require('http');\r\nconst url = require('url');\r\nconst uniqid = require('uniqid');\r\nconst WebSocket = require('ws');\r\nlet generateRandomRoomID = require('./RoomIDGenerator.js');\r\n\r\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\r\n\r\n\r\n\r\nconst SERVER_PORT = 8080;\r\n\r\nlet payload_storage = null;\r\nlet activeRoomIDs = [];\r\nlet activeClientStates = [];\r\nlet websocketConnection = null; //stores the websocket object returned by on 'connection'\r\n\r\n// Set up the HTTP server needed for WS\r\nlet server = http.createServer(function(req, res) {\r\n\r\n}).listen(SERVER_PORT, function() {\r\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\r\n});\r\n\r\n// mount the websockets \"server\" onto the http server\r\nlet wsServer = new WebSocket.Server({\r\n  server: server,\r\n  clientTracking: true\r\n});\r\n\r\n// Register the request handler with the WS server object\r\nwsServer.on('connection', handleWS_onConnection);\r\n\r\n\r\n/* ===== WS Handlers ===== */\r\nfunction handleWS_onConnection(websocket, request) {\r\n\r\n  console.log(`(+(${new Date()}) Connection to ${request.socket.remoteAddress} accepted.`);\r\n\r\n  let newClientID = uniqid();\r\n\r\n  // it may be better to create a ClientState on connection, let's try that here\r\n  activeClientStates.push(new ClientState(newClientID, null, null, websocket));\r\n\r\n  // register message, error, and close handlers with websocket object\r\n  websocket.on('message', handleWS_onMessage);\r\n  websocket.on('error', handleWS_onError);\r\n  websocket.on('close', handleWS_onClose);\r\n\r\n  // let the client know what their new ID will be\r\n  websocket.send(JSON.stringify({\r\n    action: \"client_id_and_ws_connection_created\",\r\n    clientID: newClientID\r\n  }));\r\n}\r\n\r\nfunction handleWS_onMessage(message) {\r\n\r\n  let jsonPayload = JSON.parse(message);\r\n  let currentClientState = getClientState(jsonPayload.clientID);\r\n\r\n  console.log(`(${new Date()}) Message received: ${message}`);\r\n\r\n  if(jsonPayload.action == \"create_room\") {\r\n\r\n    // The client is creating a new room, so generate a new room ID\r\n    let newRoomID = generateRandomRoomID();\r\n    while (activeRoomIDs.includes(newRoomID)) { // don't repeat room IDs\r\n      newRoomID = generateRandomRoomID();\r\n    }\r\n\r\n    // add a new ClientState object and the new roomID to the tracking arrays\r\n    activeRoomIDs.push(newRoomID);\r\n    currentClientState.roomID = newRoomID;\r\n\r\n    // let the client know the operation was successful and give them the new RoomID\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"create_room_successful\",\r\n      roomID: newRoomID\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  if(jsonPayload.action == \"join_room\") {\r\n\r\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\r\n    if (!(activeRoomIDs.includes(jsonPayload.roomID))) {\r\n        // send back a response saying that the roomID is invalid\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"join_room_failed\"\r\n        }));\r\n    }\r\n    else { //If the room is valid, create a new ClientState to keep track of the new client\r\n      currentClientState.roomID = jsonPayload.roomID;\r\n\r\n      // let each similar client know that a new player has joined\r\n      let similarClientStates = getSimilarClientStates(currentClientState.clientID);\r\n\r\n      for (let clientState of similarClientStates) {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"new_client_joined_room\",\r\n          similarClientID: currentClientState.clientID\r\n        }));\r\n\r\n\r\n      }\r\n\r\n      // return a list of similar clients to the current client\r\n      currentClientState.websocketConnection.send(JSON.stringify({\r\n        action: \"join_room_successful\",\r\n        roomID: currentClientState.roomID,\r\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction handleWS_onError(err) {\r\n  console.log(`(${new Date()}) Error: ${err}`);\r\n}\r\n\r\nfunction handleWS_onClose(reasonCode, description, connection) {\r\n  console.log((new Date()) + ': Connection closed.');\r\n}\r\n\r\n\r\n// Retrieve a ClientState that matches the given clientID\r\nfunction getClientState(clientID) {\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n    if (activeClientStates[i].clientID == clientID) {\r\n      return activeClientStates[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// return a list of a ClientStates mactching the given roomID\r\nfunction getSimilarClientStates(clientID) {\r\n\r\n  let similarClientStates = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientStates.push(activeClientStates[i]);\r\n    }\r\n  }\r\n\r\n  return similarClientStates;\r\n}\r\n\r\n// return a list of a ClientIDs corresponding to matching the given roomID\r\nfunction getSimilarClientIDs(clientID) {\r\n\r\n  let similarClientIDs = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientIDs.push(activeClientStates[i].clientID);\r\n    }\r\n  }\r\n\r\n  return similarClientIDs;\r\n}\r\n\r\n\r\n\r\n\r\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\r\n         /*if (!activeRoomIDs.includes(roomID)) {\r\n           // send back a response saying that the roomID is invalid\r\n         }\r\n         else { //If the room is valid, create a new ClientState to keep track of the new client\r\n           activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n\r\n           // return a list of clientIDs that are also associated with that room\r\n           res.writeHead(200, { 'Content-Type': 'application/json' });\r\n           res.write(JSON.stringify({\r\n             clientsInRoom: clientIDsInRoom()\r\n           }));\r\n         }\r\n    }\r\n\r\n\r\n  }\r\n  else if(req.method == 'POST') {\r\n    console.log('Received an HTTP POST request...');\r\n\r\n    // at some point move this parsing into a helper function\r\n    let body = '';\r\n    req.on('data', function(chunks) {\r\n      body += chunks.toString();\r\n    });\r\n\r\n    req.on('end', function() {\r\n      console.log(`Posted Data: ${body}`);\r\n      console.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n    });\r\n  }\r\n\r\n  res.end();\r\n\r\n});\r\n\r\nserver.listen(SERVER_PORT, function() {\r\n  console.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n\r\n\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\r\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\r\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603450271784
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\ClientState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "ClientState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientState = function ClientState(clientID, roomID, currentLocation, websocketConnection) {\n  _classCallCheck(this, ClientState);\n\n  this.clientID = clientID;\n  this.roomID = roomID;\n  this.currentLocation = currentLocation;\n  this.websocketConnection = websocketConnection;\n};\n\nvar _default = ClientState;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudFN0YXRlLmpzIl0sIm5hbWVzIjpbIkNsaWVudFN0YXRlIiwiY2xpZW50SUQiLCJyb29tSUQiLCJjdXJyZW50TG9jYXRpb24iLCJ3ZWJzb2NrZXRDb25uZWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUFBTUEsVyxHQUVKLHFCQUFZQyxRQUFaLEVBQXNCQyxNQUF0QixFQUE4QkMsZUFBOUIsRUFBK0NDLG1CQUEvQyxFQUFvRTtBQUFBOztBQUVsRSxPQUFLSCxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLE9BQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLE9BQUtDLGVBQUwsR0FBdUJBLGVBQXZCO0FBQ0EsT0FBS0MsbUJBQUwsR0FBMkJBLG1CQUEzQjtBQUVELEM7O2VBR1lKLFciLCJzb3VyY2VSb290IjoiRDpcXE15UHJvZ3JhbW1pbmdcXGdob3VsX2h1bnRlcnNcXGdob3VsX2h1bnRlcnNfc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDbGllbnRTdGF0ZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNsaWVudElELCByb29tSUQsIGN1cnJlbnRMb2NhdGlvbiwgd2Vic29ja2V0Q29ubmVjdGlvbikge1xyXG5cclxuICAgIHRoaXMuY2xpZW50SUQgPSBjbGllbnRJRDtcclxuICAgIHRoaXMucm9vbUlEID0gcm9vbUlEO1xyXG4gICAgdGhpcy5jdXJyZW50TG9jYXRpb24gPSBjdXJyZW50TG9jYXRpb247XHJcbiAgICB0aGlzLndlYnNvY2tldENvbm5lY3Rpb24gPSB3ZWJzb2NrZXRDb25uZWN0aW9uO1xyXG5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENsaWVudFN0YXRlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ClientState.js"
      ],
      "names": [
        "ClientState",
        "clientID",
        "roomID",
        "currentLocation",
        "websocketConnection"
      ],
      "mappings": ";;;;;;;;;IAAMA,W,GAEJ,qBAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,eAA9B,EAA+CC,mBAA/C,EAAoE;AAAA;;AAElE,OAAKH,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKC,mBAAL,GAA2BA,mBAA3B;AAED,C;;eAGYJ,W",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "class ClientState {\r\n\r\n  constructor(clientID, roomID, currentLocation, websocketConnection) {\r\n\r\n    this.clientID = clientID;\r\n    this.roomID = roomID;\r\n    this.currentLocation = currentLocation;\r\n    this.websocketConnection = websocketConnection;\r\n\r\n  }\r\n}\r\n\r\nexport default ClientState;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603398805777
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\RoomIDGenerator.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "RoomIDGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* Function used to generate random Room IDs*/\n// List of characters that can potentially show up in the Room ID\nvar CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar ROOM_ID_LEN = 6;\n\nfunction generateRandomRoomID() {\n  var roomID = \"\";\n\n  for (var i = 0; i < ROOM_ID_LEN; i++) {\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\n  }\n\n  return roomID;\n}\n\nmodule.exports = generateRandomRoomID;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvb21JREdlbmVyYXRvci5qcyJdLCJuYW1lcyI6WyJDSEFSUyIsIlJPT01fSURfTEVOIiwiZ2VuZXJhdGVSYW5kb21Sb29tSUQiLCJyb29tSUQiLCJpIiwiTWF0aCIsInJvdW5kIiwicmFuZG9tIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBO0FBQ0EsSUFBTUEsS0FBSyxHQUFHLHNDQUFkO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLENBQXBCOztBQUVBLFNBQVNDLG9CQUFULEdBQWdDO0FBRTlCLE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUVBLE9BQUksSUFBSUMsQ0FBQyxHQUFHLENBQVosRUFBZUEsQ0FBQyxHQUFFSCxXQUFsQixFQUErQkcsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQ0QsSUFBQUEsTUFBTSxJQUFJSCxLQUFLLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JQLEtBQUssQ0FBQ1EsTUFBakMsQ0FBRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBT0wsTUFBUDtBQUVEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLG9CQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEZ1bmN0aW9uIHVzZWQgdG8gZ2VuZXJhdGUgcmFuZG9tIFJvb20gSURzKi9cclxuXHJcbi8vIExpc3Qgb2YgY2hhcmFjdGVycyB0aGF0IGNhbiBwb3RlbnRpYWxseSBzaG93IHVwIGluIHRoZSBSb29tIElEXHJcbmNvbnN0IENIQVJTID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtcclxuY29uc3QgUk9PTV9JRF9MRU4gPSA2O1xyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21Sb29tSUQoKSB7XHJcblxyXG4gIGxldCByb29tSUQgPSBcIlwiO1xyXG5cclxuICBmb3IobGV0IGkgPSAwOyBpPCBST09NX0lEX0xFTjsgaSsrKSB7XHJcbiAgICByb29tSUQgKz0gQ0hBUlNbTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogQ0hBUlMubGVuZ3RoKV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcm9vbUlEO1xyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnZW5lcmF0ZVJhbmRvbVJvb21JRDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "RoomIDGenerator.js"
      ],
      "names": [
        "CHARS",
        "ROOM_ID_LEN",
        "generateRandomRoomID",
        "roomID",
        "i",
        "Math",
        "round",
        "random",
        "length",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AAEA;AACA,IAAMA,KAAK,GAAG,sCAAd;AACA,IAAMC,WAAW,GAAG,CAApB;;AAEA,SAASC,oBAAT,GAAgC;AAE9B,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEH,WAAlB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,MAAM,IAAIH,KAAK,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACQ,MAAjC,CAAD,CAAf;AACD;;AAED,SAAOL,MAAP;AAED;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,oBAAjB",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "/* Function used to generate random Room IDs*/\r\n\r\n// List of characters that can potentially show up in the Room ID\r\nconst CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst ROOM_ID_LEN = 6;\r\n\r\nfunction generateRandomRoomID() {\r\n\r\n  let roomID = \"\";\r\n\r\n  for(let i = 0; i< ROOM_ID_LEN; i++) {\r\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\r\n  }\r\n\r\n  return roomID;\r\n\r\n}\r\n\r\nmodule.exports = generateRandomRoomID;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603172583842
  }
}