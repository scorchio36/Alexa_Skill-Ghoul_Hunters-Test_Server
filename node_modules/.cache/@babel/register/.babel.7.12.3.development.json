{
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ClientState = _interopRequireDefault(require(\"./ClientState.js\"));\n\nvar _GameState = _interopRequireDefault(require(\"./GameState.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar http = require('http');\n\nvar url = require('url');\n\nvar uniqid = require('uniqid');\n\nvar WebSocket = require('ws');\n\nvar generateRandomRoomID = require('./RoomIDGenerator.js');\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\n\n\nvar SERVER_PORT = 8080;\nvar payload_storage = null;\nvar activeRoomIDs = [];\nvar activeClientStates = [];\nvar websocketConnection = null; //stores the websocket object returned by on 'connection'\n\nvar roomID2GameStateMapping = new Map();\nvar clientID2RoomMapping = new Map(); // Set up the HTTP server needed for WS\n\nvar server = http.createServer(function (req, res) {}).listen(SERVER_PORT, function () {\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\n}); // mount the websockets \"server\" onto the http server\n\nvar wsServer = new WebSocket.Server({\n  server: server,\n  clientTracking: true\n}); // Register the request handler with the WS server object\n\nwsServer.on('connection', handleWS_onConnection);\n/* ===== WS Handlers ===== */\n\nfunction handleWS_onConnection(websocket, request) {\n  console.log(\"(+(\".concat(new Date(), \") Connection to \").concat(request.socket.remoteAddress, \" accepted.\")); // client ID will be generated server-side\n\n  var newClientID = uniqid(); // it may be better to create a ClientState on connection, let's try that here\n\n  activeClientStates.push(new _ClientState[\"default\"](newClientID, null, null, websocket, \"player\")); // register message, error, and close handlers with websocket object\n\n  websocket.on('message', handleWS_onMessage);\n  websocket.on('error', handleWS_onError);\n  websocket.on('close', handleWS_onClose); // let the client know what their new ID will be\n\n  websocket.send(JSON.stringify({\n    action: \"client_id_and_ws_connection_created\",\n    clientID: newClientID\n  }));\n}\n\nfunction handleWS_onMessage(message) {\n  var jsonPayload = JSON.parse(message);\n  var currentRoomID = clientID2RoomMapping.get(jsonPayload.clientID);\n  var currentClientState = null;\n  var currentGameState = null;\n\n  if (currentRoomID) {\n    currentGameState = roomID2GameStateMapping.get(currentRoomID);\n    currentClientState = currentGameState.getClientState(jsonPayload.clientID);\n  } else {\n    currentClientState = getClientState(jsonPayload.clientID);\n  }\n\n  console.log(\"(\".concat(new Date(), \") Message received: \").concat(message));\n  /* Similar to the client's conditional action monitoring, this set of\r\n  conditionals within the handleWS_onMessage function check the incoming action\r\n  from the client, perform operations according the intercepted action, and return\r\n  any necessary results to the client. */\n\n  if (jsonPayload.action == \"create_room\") {\n    // The client is creating a new room, so generate a new room ID\n    var newRoomID = generateRandomRoomID();\n\n    while (activeRoomIDs.includes(newRoomID)) {\n      // don't repeat room IDs\n      newRoomID = generateRandomRoomID();\n    }\n    /* Create a new GameState object to go along with the new RoomID. Add the\r\n    client that created a room to the GameState's ClientStates list. */\n\n\n    roomID2GameStateMapping.set(newRoomID, new _GameState[\"default\"]());\n    roomID2GameStateMapping.get(newRoomID).addClientState(currentClientState);\n    roomID2GameStateMapping.get(newRoomID).addClient(currentClientState.clientID);\n    roomID2GameStateMapping.remainingPlayers++;\n    clientID2RoomMapping.set(jsonPayload.clientID, newRoomID); // add the new roomID to the tracking array and update the current ClientState's roomID\n\n    activeRoomIDs.push(newRoomID);\n    currentClientState.roomID = newRoomID; // let the client know the operation was successful and give them the new RoomID\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"create_room_successful\",\n      roomID: newRoomID\n    }));\n  } // a new client has requested to join a room\n\n\n  if (jsonPayload.action == \"join_room\") {\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\n    if (!activeRoomIDs.includes(jsonPayload.roomID)) {\n      // send back a response saying that the roomID is invalid\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_failed\"\n      }));\n    } else {\n      // grab the gameState based on the roomID passed in\n      currentGameState = roomID2GameStateMapping.get(jsonPayload.roomID); // If the room is valid, update the RoomID of the current ClientState and\n      // add the clientState to the gameState and roomID mapping\n\n      currentClientState.roomID = jsonPayload.roomID;\n      currentGameState.addClientState(currentClientState);\n      currentGameState.addClient(currentClientState.clientID);\n      currentGameState.remainingPlayers++;\n      clientID2RoomMapping.set(jsonPayload.clientID, jsonPayload.roomID);\n      /* Let each similar client know that a new player has joined their room. This\r\n      allows each similar client to keep track of each other and allows UI to be\r\n      properly updated on the client side. */\n\n      var similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\n      console.log(similarClientStates);\n      similarClientStates.map(function (clientState) {\n        clientState.websocketConnection.send(JSON.stringify({\n          action: \"new_client_joined_room\",\n          similarClientID: currentClientState.clientID\n        }));\n      });\n      /* Return a list of similar clients to the current client, so the current\r\n      client may properly update it's UI and know which clients are in the room\r\n      that was just joined */\n\n      currentClientState.websocketConnection.send(JSON.stringify({\n        action: \"join_room_successful\",\n        roomID: currentClientState.roomID,\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\n      }));\n    }\n  }\n\n  if (jsonPayload.action == \"start_game\") {\n    /* We will need all the similar clients to update their roles and alert them\r\n    that the game has started */\n    var _similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\n\n    var currentAndSimilarClientStates = _similarClientStates.concat(currentClientState); // randomly assign one of the clients to be a ghoul\n\n\n    currentGameState.assignRandomClientAsGhoul(); //initialize remainingPlayers property in GameState\n\n    currentGameState.remainingPlayers = currentGameState.clientStates.size - 1; //-2 because ghoul is not a remiaining player\n    // let each similar client know their role and alert them of game start\n\n    _similarClientStates.map(function (clientState) {\n      clientState.websocketConnection.send(JSON.stringify({\n        action: \"game_started\",\n        role: clientState.role\n      }));\n    }); // alert the current client and also tell the client his role\n\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"game_started\",\n      role: currentClientState.role\n    }));\n  } // ghoul has hidden the treasure. Let users know that they can now play and move around\n\n\n  if (jsonPayload.action == \"treasure_hidden\") {\n    var _similarClientStates2 = currentGameState.getSimilarClientStates(currentClientState.clientID); // let each similar client know their role and alert them of game start\n\n\n    _similarClientStates2.map(function (clientState) {\n      clientState.websocketConnection.send(JSON.stringify({\n        action: \"allow_player_movement\",\n        searchable: jsonPayload.searchable\n      }));\n    }); // alert the current client and also tell the client his role\n\n\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"allow_player_movement\",\n      searchable: jsonPayload.searchable\n    }));\n  }\n  /* If a player moves, update the location in their respective ClientState.\r\n  Also, check if a player and ghoul's location coincide with each other. If they\r\n  do, then let the ghoul know he killed a player, and the player know that they\r\n  died. */\n\n\n  if (jsonPayload.action == \"update_location\") {\n    currentClientState.location = jsonPayload.location; // if the player is the ghoul, compare their location with all players\n\n    var _similarClientStates3 = currentGameState.getSimilarClientStates(currentClientState.clientID);\n\n    if (currentClientState.role == \"ghoul\") {\n      _similarClientStates3.map(function (clientState) {\n        if (clientState.location == currentClientState.location) {\n          //let player know they were killed\n          clientState.websocketConnection.send(JSON.stringify({\n            action: \"killed_by_ghoul\"\n          }));\n          currentClientState.websocketConnection.send(JSON.stringify({\n            //let ghoul know he killed someone\n            action: \"killed_a_player\",\n            killedClient: clientState.clientID\n          })); // decrement remainingPlayers each time ghoul kills a player\n\n          currentGameState.remainingPlayers--;\n        }\n      });\n    } // if the player is not a ghoul, compare their location to the ghoul\n    else {\n        var ghoulClientState = currentGameState.getGhoulClientState();\n\n        if (currentClientState.location == ghoulClientState.location) {\n          currentClientState.websocketConnection.send(JSON.stringify({\n            //let player know they were killed\n            action: \"killed_by_ghoul\"\n          }));\n          ghoulClientState.websocketConnection.send(JSON.stringify({\n            //let ghoul know he killed someone\n            action: \"killed_a_player\",\n            killedClient: similarClientState.clientID\n          }));\n          currentGameState.remainingPlayers--;\n        }\n      }\n\n    if (currentGameState.remainingPlayers == 0) {\n      //let all similar clients know that the game is over and ghoul wins\n      _similarClientStates3.map(function (clientState) {\n        if (clientState.role == \"ghoul\") {\n          clientState.websocketConnection.send(JSON.stringify({\n            action: \"game_over_ghoul_wins\",\n            isWinner: true\n          }));\n        } else {\n          clientState.websocketConnection.send(JSON.stringify({\n            action: \"game_over_ghoul_wins\",\n            isWinner: false\n          }));\n        }\n      }); // let the current client know that the game is over and ghoul wins\n\n\n      if (currentClientState.role == \"ghoul\") {\n        currentClientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_ghoul_wins\",\n          isWinner: true\n        }));\n      } else {\n        currentClientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_ghoul_wins\",\n          isWinner: false\n        }));\n      }\n    }\n  } // the only way the player_wins conditional is triggered is if a player\n  // client wins. Ghoul clients cannot send a 'player_wins' action\n\n\n  if (jsonPayload.action == \"player_wins\") {\n    currentClientState.websocketConnection.send(JSON.stringify({\n      action: \"game_over_player_wins\",\n      isWinner: true\n    }));\n\n    var _similarClientStates4 = currentGameState.getSimilarClientStates(currentClientState.clientID);\n\n    _similarClientStates4.map(function (clientState) {\n      // let the ghoul know that he lost\n      if (clientState.role == \"ghoul\") {\n        clientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_player_wins\",\n          isWinner: false\n        }));\n      } else {\n        clientState.websocketConnection.send(JSON.stringify({\n          action: \"game_over_player_wins\",\n          isWinner: true\n        }));\n      }\n    });\n  }\n\n  if (jsonPayload.action == \"play_again\" || jsonPayload.action == \"quit_game\") {\n    // reset role and location regardless of button\n    currentClientState.role = \"player\";\n    currentClientState.location = null; // for quitting, remove client from mappings and reset roomID\n\n    if (jsonPayload.action == \"quit_game\") {\n      // let all similar clients know that a player in their room has quit\n      var _similarClientStates5 = currentGameState.getSimilarClientStates(currentClientState.clientID);\n\n      _similarClientStates5.map(function (clientState) {\n        clientState.websocketConnection.send(JSON.stringify({\n          action: \"player_quit\",\n          quitterID: currentClientState.clientID\n        }));\n      });\n\n      currentClientState.roomID = null;\n      var roomID = clientID2RoomMapping.get(currentClientState.clientID);\n      roomID2GameStateMapping.get(roomID).removeClientState(currentClientState.clientID);\n      clientID2RoomMapping[\"delete\"](currentClientState.clientID);\n    }\n  }\n}\n\nfunction handleWS_onError(err) {\n  console.log(\"(\".concat(new Date(), \") Error: \").concat(err));\n}\n\nfunction handleWS_onClose(reasonCode, description, connection) {\n  console.log(new Date() + ': Connection closed.');\n} // Retrieve a ClientState that matches the given clientID\n// Clean this up with For...of loops later...\n\n\nfunction getClientState(clientID) {\n  for (var i = 0; i < activeClientStates.length; i++) {\n    if (activeClientStates[i].clientID == clientID) {\n      return activeClientStates[i];\n    }\n  }\n}\n/* Return a list of a ClientStates mactching the given roomID, except for the\r\nClientState that has the same clientID that was passed in as an input param. */\n\n\nfunction getSimilarClientStates(clientID) {\n  var similarClientStates = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientStates.push(activeClientStates[i]);\n    }\n  }\n\n  return similarClientStates;\n}\n/* Return a list of a Client IDs corresponding to matching the given roomID. Every\r\nmatching client ID is returned except for the client ID that was passed into the\r\nfunction. */\n\n\nfunction getSimilarClientIDs(clientID) {\n  var similarClientIDs = [];\n  var currentClientState = getClientState(clientID);\n\n  for (var i = 0; i < activeClientStates.length; i++) {\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\n      similarClientIDs.push(activeClientStates[i].clientID);\n    }\n  }\n\n  return similarClientIDs;\n}\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\n\n/*if (!activeRoomIDs.includes(roomID)) {\r\n  // send back a response saying that the roomID is invalid\r\n}\r\nelse { //If the room is valid, create a new ClientState to keep track of the new client\r\n  activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n    // return a list of clientIDs that are also associated with that room\r\n  res.writeHead(200, { 'Content-Type': 'application/json' });\r\n  res.write(JSON.stringify({\r\n    clientsInRoom: clientIDsInRoom()\r\n  }));\r\n}\r\n}\r\n}\r\nelse if(req.method == 'POST') {\r\nconsole.log('Received an HTTP POST request...');\r\n// at some point move this parsing into a helper function\r\nlet body = '';\r\nreq.on('data', function(chunks) {\r\nbody += chunks.toString();\r\n});\r\nreq.on('end', function() {\r\nconsole.log(`Posted Data: ${body}`);\r\nconsole.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n});\r\n}\r\nres.end();\r\n});\r\nserver.listen(SERVER_PORT, function() {\r\nconsole.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\n\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\n\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "http",
        "require",
        "url",
        "uniqid",
        "WebSocket",
        "generateRandomRoomID",
        "SERVER_PORT",
        "payload_storage",
        "activeRoomIDs",
        "activeClientStates",
        "websocketConnection",
        "roomID2GameStateMapping",
        "Map",
        "clientID2RoomMapping",
        "server",
        "createServer",
        "req",
        "res",
        "listen",
        "console",
        "log",
        "wsServer",
        "Server",
        "clientTracking",
        "on",
        "handleWS_onConnection",
        "websocket",
        "request",
        "Date",
        "socket",
        "remoteAddress",
        "newClientID",
        "push",
        "ClientState",
        "handleWS_onMessage",
        "handleWS_onError",
        "handleWS_onClose",
        "send",
        "JSON",
        "stringify",
        "action",
        "clientID",
        "message",
        "jsonPayload",
        "parse",
        "currentRoomID",
        "get",
        "currentClientState",
        "currentGameState",
        "getClientState",
        "newRoomID",
        "includes",
        "set",
        "GameState",
        "addClientState",
        "addClient",
        "remainingPlayers",
        "roomID",
        "similarClientStates",
        "getSimilarClientStates",
        "map",
        "clientState",
        "similarClientID",
        "similarClients",
        "getSimilarClientIDs",
        "currentAndSimilarClientStates",
        "concat",
        "assignRandomClientAsGhoul",
        "clientStates",
        "size",
        "role",
        "searchable",
        "location",
        "killedClient",
        "ghoulClientState",
        "getGhoulClientState",
        "similarClientState",
        "isWinner",
        "quitterID",
        "removeClientState",
        "err",
        "reasonCode",
        "description",
        "connection",
        "i",
        "length",
        "similarClientIDs"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "import ClientState from './ClientState.js';\r\nimport GameState from './GameState.js';\r\n\r\nconst http = require('http');\r\nconst url = require('url');\r\nconst uniqid = require('uniqid');\r\nconst WebSocket = require('ws');\r\nlet generateRandomRoomID = require('./RoomIDGenerator.js');\r\n\r\n/***** I am introducing some terminology here:\r\n\r\nSimilar Clients: clients within the same room as the current Client\r\n\r\nThis will make naming my functions easier... *****/\r\n\r\n\r\n\r\nconst SERVER_PORT = 8080;\r\n\r\nlet payload_storage = null;\r\nlet activeRoomIDs = [];\r\nlet activeClientStates = [];\r\nlet websocketConnection = null; //stores the websocket object returned by on 'connection'\r\n\r\n\r\nlet roomID2GameStateMapping = new Map();\r\nlet clientID2RoomMapping = new Map();\r\n\r\n// Set up the HTTP server needed for WS\r\nlet server = http.createServer(function(req, res) {\r\n\r\n}).listen(SERVER_PORT, function() {\r\n  console.log(\"Server is now listening on port \" + SERVER_PORT);\r\n});\r\n\r\n// mount the websockets \"server\" onto the http server\r\nlet wsServer = new WebSocket.Server({\r\n  server: server,\r\n  clientTracking: true\r\n});\r\n\r\n// Register the request handler with the WS server object\r\nwsServer.on('connection', handleWS_onConnection);\r\n\r\n\r\n/* ===== WS Handlers ===== */\r\nfunction handleWS_onConnection(websocket, request) {\r\n\r\n  console.log(`(+(${new Date()}) Connection to ${request.socket.remoteAddress} accepted.`);\r\n\r\n  // client ID will be generated server-side\r\n  let newClientID = uniqid();\r\n\r\n  // it may be better to create a ClientState on connection, let's try that here\r\n  activeClientStates.push(new ClientState(newClientID, null, null, websocket, \"player\"));\r\n\r\n  // register message, error, and close handlers with websocket object\r\n  websocket.on('message', handleWS_onMessage);\r\n  websocket.on('error', handleWS_onError);\r\n  websocket.on('close', handleWS_onClose);\r\n\r\n  // let the client know what their new ID will be\r\n  websocket.send(JSON.stringify({\r\n    action: \"client_id_and_ws_connection_created\",\r\n    clientID: newClientID\r\n  }));\r\n}\r\n\r\nfunction handleWS_onMessage(message) {\r\n\r\n  let jsonPayload = JSON.parse(message);\r\n  let currentRoomID = clientID2RoomMapping.get(jsonPayload.clientID);\r\n  let currentClientState = null;\r\n  let currentGameState = null;\r\n  if (currentRoomID) {\r\n    currentGameState = roomID2GameStateMapping.get(currentRoomID);\r\n    currentClientState = currentGameState.getClientState(jsonPayload.clientID);\r\n  }\r\n  else {\r\n    currentClientState = getClientState(jsonPayload.clientID);\r\n  }\r\n\r\n  console.log(`(${new Date()}) Message received: ${message}`);\r\n\r\n\r\n  /* Similar to the client's conditional action monitoring, this set of\r\n  conditionals within the handleWS_onMessage function check the incoming action\r\n  from the client, perform operations according the intercepted action, and return\r\n  any necessary results to the client. */\r\n  if(jsonPayload.action == \"create_room\") {\r\n\r\n    // The client is creating a new room, so generate a new room ID\r\n    let newRoomID = generateRandomRoomID();\r\n    while (activeRoomIDs.includes(newRoomID)) { // don't repeat room IDs\r\n      newRoomID = generateRandomRoomID();\r\n    }\r\n\r\n    /* Create a new GameState object to go along with the new RoomID. Add the\r\n    client that created a room to the GameState's ClientStates list. */\r\n    roomID2GameStateMapping.set(newRoomID, new GameState());\r\n    roomID2GameStateMapping.get(newRoomID).addClientState(currentClientState);\r\n    roomID2GameStateMapping.get(newRoomID).addClient(currentClientState.clientID);\r\n    roomID2GameStateMapping.remainingPlayers++;\r\n    clientID2RoomMapping.set(jsonPayload.clientID, newRoomID);\r\n\r\n    // add the new roomID to the tracking array and update the current ClientState's roomID\r\n    activeRoomIDs.push(newRoomID);\r\n    currentClientState.roomID = newRoomID;\r\n\r\n    // let the client know the operation was successful and give them the new RoomID\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"create_room_successful\",\r\n      roomID: newRoomID\r\n    }));\r\n  }\r\n\r\n\r\n  // a new client has requested to join a room\r\n  if(jsonPayload.action == \"join_room\") {\r\n\r\n    /* Since the client is joining a room, make sure that the given roomID is active.\r\n    If it is not active, let the client know. */\r\n    if (!(activeRoomIDs.includes(jsonPayload.roomID))) {\r\n        // send back a response saying that the roomID is invalid\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"join_room_failed\"\r\n        }));\r\n    }\r\n    else {\r\n\r\n      // grab the gameState based on the roomID passed in\r\n      currentGameState = roomID2GameStateMapping.get(jsonPayload.roomID);\r\n\r\n      // If the room is valid, update the RoomID of the current ClientState and\r\n      // add the clientState to the gameState and roomID mapping\r\n      currentClientState.roomID = jsonPayload.roomID;\r\n      currentGameState.addClientState(currentClientState);\r\n      currentGameState.addClient(currentClientState.clientID);\r\n      currentGameState.remainingPlayers++;\r\n      clientID2RoomMapping.set(jsonPayload.clientID, jsonPayload.roomID);\r\n\r\n\r\n      /* Let each similar client know that a new player has joined their room. This\r\n      allows each similar client to keep track of each other and allows UI to be\r\n      properly updated on the client side. */\r\n      let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n      console.log(similarClientStates);\r\n      similarClientStates.map(function(clientState) {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"new_client_joined_room\",\r\n          similarClientID: currentClientState.clientID\r\n        }));\r\n      });\r\n\r\n\r\n      /* Return a list of similar clients to the current client, so the current\r\n      client may properly update it's UI and know which clients are in the room\r\n      that was just joined */\r\n      currentClientState.websocketConnection.send(JSON.stringify({\r\n        action: \"join_room_successful\",\r\n        roomID: currentClientState.roomID,\r\n        similarClients: getSimilarClientIDs(currentClientState.clientID)\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  if (jsonPayload.action == \"start_game\") {\r\n\r\n    /* We will need all the similar clients to update their roles and alert them\r\n    that the game has started */\r\n    let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n    let currentAndSimilarClientStates = similarClientStates.concat(currentClientState);\r\n\r\n    // randomly assign one of the clients to be a ghoul\r\n    currentGameState.assignRandomClientAsGhoul();\r\n\r\n    //initialize remainingPlayers property in GameState\r\n    currentGameState.remainingPlayers = currentGameState.clientStates.size - 1; //-2 because ghoul is not a remiaining player\r\n\r\n    // let each similar client know their role and alert them of game start\r\n    similarClientStates.map(function(clientState) {\r\n      clientState.websocketConnection.send(JSON.stringify({\r\n        action: \"game_started\",\r\n        role: clientState.role\r\n      }));\r\n    });\r\n\r\n    // alert the current client and also tell the client his role\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"game_started\",\r\n      role: currentClientState.role\r\n    }));\r\n\r\n  }\r\n\r\n\r\n  // ghoul has hidden the treasure. Let users know that they can now play and move around\r\n  if (jsonPayload.action == \"treasure_hidden\") {\r\n\r\n    let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n\r\n    // let each similar client know their role and alert them of game start\r\n    similarClientStates.map(function(clientState) {\r\n      clientState.websocketConnection.send(JSON.stringify({\r\n        action: \"allow_player_movement\",\r\n        searchable: jsonPayload.searchable\r\n      }));\r\n    });\r\n\r\n    // alert the current client and also tell the client his role\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"allow_player_movement\",\r\n      searchable: jsonPayload.searchable\r\n    }));\r\n  }\r\n\r\n\r\n\r\n\r\n  /* If a player moves, update the location in their respective ClientState.\r\n  Also, check if a player and ghoul's location coincide with each other. If they\r\n  do, then let the ghoul know he killed a player, and the player know that they\r\n  died. */\r\n  if (jsonPayload.action == \"update_location\") {\r\n\r\n    currentClientState.location = jsonPayload.location;\r\n\r\n    // if the player is the ghoul, compare their location with all players\r\n    let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n    if (currentClientState.role == \"ghoul\") {\r\n      similarClientStates.map(function(clientState) {\r\n\r\n        if (clientState.location == currentClientState.location) { //let player know they were killed\r\n          clientState.websocketConnection.send(JSON.stringify({\r\n            action: \"killed_by_ghoul\"\r\n          }));\r\n          currentClientState.websocketConnection.send(JSON.stringify({ //let ghoul know he killed someone\r\n            action: \"killed_a_player\",\r\n            killedClient: clientState.clientID\r\n          }));\r\n\r\n          // decrement remainingPlayers each time ghoul kills a player\r\n          currentGameState.remainingPlayers--;\r\n        }\r\n      });\r\n    }\r\n    // if the player is not a ghoul, compare their location to the ghoul\r\n    else {\r\n      let ghoulClientState = currentGameState.getGhoulClientState();\r\n      if (currentClientState.location == ghoulClientState.location) {\r\n        currentClientState.websocketConnection.send(JSON.stringify({ //let player know they were killed\r\n          action: \"killed_by_ghoul\"\r\n        }));\r\n        ghoulClientState.websocketConnection.send(JSON.stringify({ //let ghoul know he killed someone\r\n          action: \"killed_a_player\",\r\n          killedClient: similarClientState.clientID\r\n        }));\r\n        currentGameState.remainingPlayers--;\r\n      }\r\n    }\r\n\r\n    if(currentGameState.remainingPlayers == 0) {\r\n\r\n      //let all similar clients know that the game is over and ghoul wins\r\n      similarClientStates.map(function(clientState) {\r\n        if (clientState.role == \"ghoul\") {\r\n          clientState.websocketConnection.send(JSON.stringify({\r\n            action: \"game_over_ghoul_wins\",\r\n            isWinner: true\r\n          }));\r\n        }\r\n        else {\r\n          clientState.websocketConnection.send(JSON.stringify({\r\n            action: \"game_over_ghoul_wins\",\r\n            isWinner: false\r\n          }));\r\n        }\r\n      });\r\n\r\n      // let the current client know that the game is over and ghoul wins\r\n      if (currentClientState.role == \"ghoul\") {\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_ghoul_wins\",\r\n          isWinner: true\r\n        }));\r\n      }\r\n      else {\r\n        currentClientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_ghoul_wins\",\r\n          isWinner: false\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // the only way the player_wins conditional is triggered is if a player\r\n  // client wins. Ghoul clients cannot send a 'player_wins' action\r\n  if (jsonPayload.action == \"player_wins\") {\r\n\r\n    currentClientState.websocketConnection.send(JSON.stringify({\r\n      action: \"game_over_player_wins\",\r\n      isWinner: true\r\n    }));\r\n\r\n    let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n    similarClientStates.map(function(clientState) {\r\n\r\n      // let the ghoul know that he lost\r\n      if (clientState.role == \"ghoul\") {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_player_wins\",\r\n          isWinner: false\r\n        }));\r\n      }\r\n      else {\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"game_over_player_wins\",\r\n          isWinner: true\r\n        }));\r\n      }\r\n    });\r\n  }\r\n\r\n  if (jsonPayload.action == \"play_again\" || jsonPayload.action == \"quit_game\") {\r\n\r\n    // reset role and location regardless of button\r\n    currentClientState.role = \"player\";\r\n    currentClientState.location = null;\r\n\r\n    // for quitting, remove client from mappings and reset roomID\r\n    if (jsonPayload.action == \"quit_game\") {\r\n\r\n      // let all similar clients know that a player in their room has quit\r\n      let similarClientStates = currentGameState.getSimilarClientStates(currentClientState.clientID);\r\n      similarClientStates.map(function(clientState) {\r\n\r\n        clientState.websocketConnection.send(JSON.stringify({\r\n          action: \"player_quit\",\r\n          quitterID: currentClientState.clientID\r\n        }));\r\n      });\r\n\r\n      currentClientState.roomID = null;\r\n      let roomID = clientID2RoomMapping.get(currentClientState.clientID);\r\n      roomID2GameStateMapping.get(roomID).removeClientState(currentClientState.clientID);\r\n      clientID2RoomMapping.delete(currentClientState.clientID);\r\n\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction handleWS_onError(err) {\r\n  console.log(`(${new Date()}) Error: ${err}`);\r\n}\r\n\r\nfunction handleWS_onClose(reasonCode, description, connection) {\r\n  console.log((new Date()) + ': Connection closed.');\r\n}\r\n\r\n\r\n// Retrieve a ClientState that matches the given clientID\r\n// Clean this up with For...of loops later...\r\nfunction getClientState(clientID) {\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n    if (activeClientStates[i].clientID == clientID) {\r\n      return activeClientStates[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* Return a list of a ClientStates mactching the given roomID, except for the\r\nClientState that has the same clientID that was passed in as an input param. */\r\nfunction getSimilarClientStates(clientID) {\r\n\r\n  let similarClientStates = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientStates.push(activeClientStates[i]);\r\n    }\r\n  }\r\n\r\n  return similarClientStates;\r\n}\r\n\r\n/* Return a list of a Client IDs corresponding to matching the given roomID. Every\r\nmatching client ID is returned except for the client ID that was passed into the\r\nfunction. */\r\nfunction getSimilarClientIDs(clientID) {\r\n\r\n  let similarClientIDs = [];\r\n  let currentClientState = getClientState(clientID);\r\n\r\n  for (let i=0; i<activeClientStates.length; i++) {\r\n\r\n    // we want to include every ClientState with the same roomID except for the one with the given clientID\r\n    if (activeClientStates[i].roomID == currentClientState.roomID && activeClientStates[i].clientID != clientID) {\r\n      similarClientIDs.push(activeClientStates[i].clientID);\r\n    }\r\n  }\r\n\r\n  return similarClientIDs;\r\n}\r\n\r\n\r\n\r\n\r\n/*let pathname = url.parse(req.url).pathname;\r\n  let query = url.parse(req.url, true).query;\r\n\r\n  enable_CORS(res);\r\n\r\n  if (req.method == 'GET') {\r\n\r\n    console.log('Received an HTTP GET request...');\r\n\r\n    // \"Host a game\" button is pressed on the client side\r\n    if(pathname === \"/create_room\") {\r\n\r\n\r\n\r\n      // Let the client-side know that the operation was successful\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.write(JSON.stringify({\r\n        roomID: newRoomID\r\n      }));\r\n\r\n    }\r\n\r\n    if (pathname === \"/join_room\") {\r\n\r\n      /* Since the client is joining a room, make sure that the given roomID is active.\r\n         If it is not active, let the client know. */\r\n         /*if (!activeRoomIDs.includes(roomID)) {\r\n           // send back a response saying that the roomID is invalid\r\n         }\r\n         else { //If the room is valid, create a new ClientState to keep track of the new client\r\n           activeClientStates.push(new ClientState(query.clientID, roomID, null));\r\n\r\n           // return a list of clientIDs that are also associated with that room\r\n           res.writeHead(200, { 'Content-Type': 'application/json' });\r\n           res.write(JSON.stringify({\r\n             clientsInRoom: clientIDsInRoom()\r\n           }));\r\n         }\r\n    }\r\n\r\n\r\n  }\r\n  else if(req.method == 'POST') {\r\n    console.log('Received an HTTP POST request...');\r\n\r\n    // at some point move this parsing into a helper function\r\n    let body = '';\r\n    req.on('data', function(chunks) {\r\n      body += chunks.toString();\r\n    });\r\n\r\n    req.on('end', function() {\r\n      console.log(`Posted Data: ${body}`);\r\n      console.log(`Parsed Json: ${JSON.parse(body)[\"location\"]}`)\r\n    });\r\n  }\r\n\r\n  res.end();\r\n\r\n});\r\n\r\nserver.listen(SERVER_PORT, function() {\r\n  console.log(`Server is now listening on port ${SERVER_PORT}`);\r\n});\r\n\r\n\r\n/* This set of statements allows the client to talk to the test server.\r\nCORS will give you issues otherwise. */\r\n/*function enable_CORS(res) {\r\n\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\tres.setHeader('Access-Control-Request-Method', '*');\r\n\tres.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\r\n\tres.setHeader('Access-Control-Allow-Headers', '*');\r\n}\r\n\r\n/* Returns an array of clientIDs in a given room. This information will be used\r\non the client side so that the user can see the other players in the room*/\r\n/*function clientIDsInRoom(roomID) {\r\n\r\n  let clientsInRoom = [];\r\n  for (const clientState in activeClientStates) {\r\n    if (clientState['roomID'] == roomID) {\r\n      clientsInRoom.push(clientState['clientID']);\r\n    }\r\n  }\r\n\r\n  return clientsInRoom;\r\n}*/\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1605509284058
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\ClientState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\ClientState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "ClientState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientState = function ClientState(clientID, roomID, currentLocation, websocketConnection, role) {\n  _classCallCheck(this, ClientState);\n\n  this.clientID = clientID;\n  this.roomID = roomID;\n  this.currentLocation = currentLocation;\n  this.websocketConnection = websocketConnection;\n  this.role = role;\n};\n\nvar _default = ClientState;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudFN0YXRlLmpzIl0sIm5hbWVzIjpbIkNsaWVudFN0YXRlIiwiY2xpZW50SUQiLCJyb29tSUQiLCJjdXJyZW50TG9jYXRpb24iLCJ3ZWJzb2NrZXRDb25uZWN0aW9uIiwicm9sZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQU1BLFcsR0FFSixxQkFBWUMsUUFBWixFQUFzQkMsTUFBdEIsRUFBOEJDLGVBQTlCLEVBQStDQyxtQkFBL0MsRUFBb0VDLElBQXBFLEVBQTBFO0FBQUE7O0FBRXhFLE9BQUtKLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsT0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsT0FBS0MsZUFBTCxHQUF1QkEsZUFBdkI7QUFDQSxPQUFLQyxtQkFBTCxHQUEyQkEsbUJBQTNCO0FBQ0EsT0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBRUQsQzs7ZUFHWUwsVyIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENsaWVudFN0YXRlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoY2xpZW50SUQsIHJvb21JRCwgY3VycmVudExvY2F0aW9uLCB3ZWJzb2NrZXRDb25uZWN0aW9uLCByb2xlKSB7XHJcblxyXG4gICAgdGhpcy5jbGllbnRJRCA9IGNsaWVudElEO1xyXG4gICAgdGhpcy5yb29tSUQgPSByb29tSUQ7XHJcbiAgICB0aGlzLmN1cnJlbnRMb2NhdGlvbiA9IGN1cnJlbnRMb2NhdGlvbjtcclxuICAgIHRoaXMud2Vic29ja2V0Q29ubmVjdGlvbiA9IHdlYnNvY2tldENvbm5lY3Rpb247XHJcbiAgICB0aGlzLnJvbGUgPSByb2xlO1xyXG5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENsaWVudFN0YXRlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ClientState.js"
      ],
      "names": [
        "ClientState",
        "clientID",
        "roomID",
        "currentLocation",
        "websocketConnection",
        "role"
      ],
      "mappings": ";;;;;;;;;IAAMA,W,GAEJ,qBAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,eAA9B,EAA+CC,mBAA/C,EAAoEC,IAApE,EAA0E;AAAA;;AAExE,OAAKJ,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKC,mBAAL,GAA2BA,mBAA3B;AACA,OAAKC,IAAL,GAAYA,IAAZ;AAED,C;;eAGYL,W",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "class ClientState {\r\n\r\n  constructor(clientID, roomID, currentLocation, websocketConnection, role) {\r\n\r\n    this.clientID = clientID;\r\n    this.roomID = roomID;\r\n    this.currentLocation = currentLocation;\r\n    this.websocketConnection = websocketConnection;\r\n    this.role = role;\r\n\r\n  }\r\n}\r\n\r\nexport default ClientState;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603697681033
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\RoomIDGenerator.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\RoomIDGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "RoomIDGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* Function used to generate random Room IDs*/\n// List of characters that can potentially show up in the Room ID\nvar CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar ROOM_ID_LEN = 6;\n\nfunction generateRandomRoomID() {\n  var roomID = \"\";\n\n  for (var i = 0; i < ROOM_ID_LEN; i++) {\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\n  }\n\n  return roomID;\n}\n\nmodule.exports = generateRandomRoomID;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvb21JREdlbmVyYXRvci5qcyJdLCJuYW1lcyI6WyJDSEFSUyIsIlJPT01fSURfTEVOIiwiZ2VuZXJhdGVSYW5kb21Sb29tSUQiLCJyb29tSUQiLCJpIiwiTWF0aCIsInJvdW5kIiwicmFuZG9tIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBO0FBQ0EsSUFBTUEsS0FBSyxHQUFHLHNDQUFkO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLENBQXBCOztBQUVBLFNBQVNDLG9CQUFULEdBQWdDO0FBRTlCLE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUVBLE9BQUksSUFBSUMsQ0FBQyxHQUFHLENBQVosRUFBZUEsQ0FBQyxHQUFFSCxXQUFsQixFQUErQkcsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQ0QsSUFBQUEsTUFBTSxJQUFJSCxLQUFLLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JQLEtBQUssQ0FBQ1EsTUFBakMsQ0FBRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBT0wsTUFBUDtBQUVEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLG9CQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEZ1bmN0aW9uIHVzZWQgdG8gZ2VuZXJhdGUgcmFuZG9tIFJvb20gSURzKi9cclxuXHJcbi8vIExpc3Qgb2YgY2hhcmFjdGVycyB0aGF0IGNhbiBwb3RlbnRpYWxseSBzaG93IHVwIGluIHRoZSBSb29tIElEXHJcbmNvbnN0IENIQVJTID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtcclxuY29uc3QgUk9PTV9JRF9MRU4gPSA2O1xyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21Sb29tSUQoKSB7XHJcblxyXG4gIGxldCByb29tSUQgPSBcIlwiO1xyXG5cclxuICBmb3IobGV0IGkgPSAwOyBpPCBST09NX0lEX0xFTjsgaSsrKSB7XHJcbiAgICByb29tSUQgKz0gQ0hBUlNbTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogQ0hBUlMubGVuZ3RoKV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcm9vbUlEO1xyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnZW5lcmF0ZVJhbmRvbVJvb21JRDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "RoomIDGenerator.js"
      ],
      "names": [
        "CHARS",
        "ROOM_ID_LEN",
        "generateRandomRoomID",
        "roomID",
        "i",
        "Math",
        "round",
        "random",
        "length",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AAEA;AACA,IAAMA,KAAK,GAAG,sCAAd;AACA,IAAMC,WAAW,GAAG,CAApB;;AAEA,SAASC,oBAAT,GAAgC;AAE9B,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEH,WAAlB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,MAAM,IAAIH,KAAK,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACQ,MAAjC,CAAD,CAAf;AACD;;AAED,SAAOL,MAAP;AAED;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,oBAAjB",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "/* Function used to generate random Room IDs*/\r\n\r\n// List of characters that can potentially show up in the Room ID\r\nconst CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst ROOM_ID_LEN = 6;\r\n\r\nfunction generateRandomRoomID() {\r\n\r\n  let roomID = \"\";\r\n\r\n  for(let i = 0; i< ROOM_ID_LEN; i++) {\r\n    roomID += CHARS[Math.round(Math.random() * CHARS.length)];\r\n  }\r\n\r\n  return roomID;\r\n\r\n}\r\n\r\nmodule.exports = generateRandomRoomID;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603172583842
  },
  "{\"sourceRoot\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"filename\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\\\\GameState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MyProgramming\\\\ghoul_hunters\\\\ghoul_hunters_server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\GameState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
        "sourceFileName": "GameState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*The GameState object will keep track of what clients are associated with which\r\nrooms. This will make searching for a certain ClientState much more efficient, as\r\nyou won't have to search through all ClientStates on the server in order to find\r\na certain ClientState. */\nvar GameState = /*#__PURE__*/function () {\n  function GameState() {\n    _classCallCheck(this, GameState);\n\n    this.clients = []; // stores the clientIDs for clients in this game\n\n    this.clientStates = new Map(); // stores the relevant ClientStates in this game\n\n    this.remainingPlayers = 0; //\n  }\n\n  _createClass(GameState, [{\n    key: \"addClient\",\n    value: function addClient(clientID) {\n      this.clients = this.clients.concat(clientID);\n    }\n  }, {\n    key: \"addClientState\",\n    value: function addClientState(clientState) {\n      this.clientStates.set(clientState.clientID, clientState);\n    }\n  }, {\n    key: \"removeClientState\",\n    value: function removeClientState(clientID) {\n      var removalIndex = this.clients.indexOf(clientID);\n\n      if (removalIndex != -1) {\n        this.clients.splice(removalIndex, 1);\n      }\n\n      this.clientStates[\"delete\"](clientID);\n    }\n  }, {\n    key: \"getClientState\",\n    value: function getClientState(clientID) {\n      return this.clientStates.get(clientID);\n    }\n  }, {\n    key: \"removeClientState\",\n    value: function removeClientState(clientID) {\n      this.clientStates[\"delete\"](clientID);\n    }\n  }, {\n    key: \"getSimilarClientStates\",\n    value: function getSimilarClientStates(clientID) {\n      var similarClientStates = [];\n\n      var _iterator = _createForOfIteratorHelper(this.clientStates.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var clientState = _step.value;\n\n          if (clientState.clientID != clientID) {\n            similarClientStates = similarClientStates.concat(clientState);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return similarClientStates;\n    } // return the client that is the ghoul\n\n  }, {\n    key: \"getGhoulClientState\",\n    value: function getGhoulClientState() {\n      var _iterator2 = _createForOfIteratorHelper(this.clientStates.values()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var clientState = _step2.value;\n\n          if (clientState.role == \"ghoul\") {\n            return clientState;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"assignRandomClientAsGhoul\",\n    value: function assignRandomClientAsGhoul() {\n      var randomGhoulIndex = Math.floor(Math.random() * this.clients.length);\n      this.clientStates.get(this.clients[randomGhoulIndex]).role = \"ghoul\";\n    }\n  }]);\n\n  return GameState;\n}();\n\nvar _default = GameState;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhbWVTdGF0ZS5qcyJdLCJuYW1lcyI6WyJHYW1lU3RhdGUiLCJjbGllbnRzIiwiY2xpZW50U3RhdGVzIiwiTWFwIiwicmVtYWluaW5nUGxheWVycyIsImNsaWVudElEIiwiY29uY2F0IiwiY2xpZW50U3RhdGUiLCJzZXQiLCJyZW1vdmFsSW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZ2V0Iiwic2ltaWxhckNsaWVudFN0YXRlcyIsInZhbHVlcyIsInJvbGUiLCJyYW5kb21HaG91bEluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7SUFFTUEsUztBQUVKLHVCQUFjO0FBQUE7O0FBRVosU0FBS0MsT0FBTCxHQUFlLEVBQWYsQ0FGWSxDQUVPOztBQUNuQixTQUFLQyxZQUFMLEdBQW9CLElBQUlDLEdBQUosRUFBcEIsQ0FIWSxDQUdtQjs7QUFDL0IsU0FBS0MsZ0JBQUwsR0FBd0IsQ0FBeEIsQ0FKWSxDQUllO0FBRTVCOzs7OzhCQUVTQyxRLEVBQVU7QUFDbEIsV0FBS0osT0FBTCxHQUFlLEtBQUtBLE9BQUwsQ0FBYUssTUFBYixDQUFvQkQsUUFBcEIsQ0FBZjtBQUNEOzs7bUNBRWNFLFcsRUFBYTtBQUUxQixXQUFLTCxZQUFMLENBQWtCTSxHQUFsQixDQUFzQkQsV0FBVyxDQUFDRixRQUFsQyxFQUE0Q0UsV0FBNUM7QUFFRDs7O3NDQUVpQkYsUSxFQUFVO0FBRTFCLFVBQUlJLFlBQVksR0FBRyxLQUFLUixPQUFMLENBQWFTLE9BQWIsQ0FBcUJMLFFBQXJCLENBQW5COztBQUNBLFVBQUlJLFlBQVksSUFBSSxDQUFDLENBQXJCLEVBQXdCO0FBQ3RCLGFBQUtSLE9BQUwsQ0FBYVUsTUFBYixDQUFvQkYsWUFBcEIsRUFBa0MsQ0FBbEM7QUFDRDs7QUFDRCxXQUFLUCxZQUFMLFdBQXlCRyxRQUF6QjtBQUNEOzs7bUNBRWNBLFEsRUFBVTtBQUV2QixhQUFPLEtBQUtILFlBQUwsQ0FBa0JVLEdBQWxCLENBQXNCUCxRQUF0QixDQUFQO0FBRUQ7OztzQ0FFaUJBLFEsRUFBVTtBQUUxQixXQUFLSCxZQUFMLFdBQXlCRyxRQUF6QjtBQUVEOzs7MkNBRXNCQSxRLEVBQVU7QUFDL0IsVUFBSVEsbUJBQW1CLEdBQUcsRUFBMUI7O0FBRCtCLGlEQUVSLEtBQUtYLFlBQUwsQ0FBa0JZLE1BQWxCLEVBRlE7QUFBQTs7QUFBQTtBQUUvQiw0REFBbUQ7QUFBQSxjQUEzQ1AsV0FBMkM7O0FBRWpELGNBQUdBLFdBQVcsQ0FBQ0YsUUFBWixJQUF3QkEsUUFBM0IsRUFBcUM7QUFDbkNRLFlBQUFBLG1CQUFtQixHQUFHQSxtQkFBbUIsQ0FBQ1AsTUFBcEIsQ0FBMkJDLFdBQTNCLENBQXRCO0FBQ0Q7QUFDRjtBQVA4QjtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVMvQixhQUFPTSxtQkFBUDtBQUNELEssQ0FFRDs7OzswQ0FDc0I7QUFBQSxrREFFRyxLQUFLWCxZQUFMLENBQWtCWSxNQUFsQixFQUZIO0FBQUE7O0FBQUE7QUFFcEIsK0RBQW1EO0FBQUEsY0FBM0NQLFdBQTJDOztBQUVqRCxjQUFHQSxXQUFXLENBQUNRLElBQVosSUFBb0IsT0FBdkIsRUFBZ0M7QUFDOUIsbUJBQU9SLFdBQVA7QUFDRDtBQUNGO0FBUG1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBU3BCLGFBQU8sSUFBUDtBQUNEOzs7Z0RBRTJCO0FBRTFCLFVBQUlTLGdCQUFnQixHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWlCLEtBQUtsQixPQUFMLENBQWFtQixNQUF6QyxDQUF2QjtBQUNBLFdBQUtsQixZQUFMLENBQWtCVSxHQUFsQixDQUFzQixLQUFLWCxPQUFMLENBQWFlLGdCQUFiLENBQXRCLEVBQXNERCxJQUF0RCxHQUE2RCxPQUE3RDtBQUVEOzs7Ozs7ZUFHWWYsUyIsInNvdXJjZVJvb3QiOiJEOlxcTXlQcm9ncmFtbWluZ1xcZ2hvdWxfaHVudGVyc1xcZ2hvdWxfaHVudGVyc19zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qVGhlIEdhbWVTdGF0ZSBvYmplY3Qgd2lsbCBrZWVwIHRyYWNrIG9mIHdoYXQgY2xpZW50cyBhcmUgYXNzb2NpYXRlZCB3aXRoIHdoaWNoXHJcbnJvb21zLiBUaGlzIHdpbGwgbWFrZSBzZWFyY2hpbmcgZm9yIGEgY2VydGFpbiBDbGllbnRTdGF0ZSBtdWNoIG1vcmUgZWZmaWNpZW50LCBhc1xyXG55b3Ugd29uJ3QgaGF2ZSB0byBzZWFyY2ggdGhyb3VnaCBhbGwgQ2xpZW50U3RhdGVzIG9uIHRoZSBzZXJ2ZXIgaW4gb3JkZXIgdG8gZmluZFxyXG5hIGNlcnRhaW4gQ2xpZW50U3RhdGUuICovXHJcblxyXG5jbGFzcyBHYW1lU3RhdGUge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICB0aGlzLmNsaWVudHMgPSBbXTsgLy8gc3RvcmVzIHRoZSBjbGllbnRJRHMgZm9yIGNsaWVudHMgaW4gdGhpcyBnYW1lXHJcbiAgICB0aGlzLmNsaWVudFN0YXRlcyA9IG5ldyBNYXAoKTsgLy8gc3RvcmVzIHRoZSByZWxldmFudCBDbGllbnRTdGF0ZXMgaW4gdGhpcyBnYW1lXHJcbiAgICB0aGlzLnJlbWFpbmluZ1BsYXllcnMgPSAwOyAvL1xyXG5cclxuICB9XHJcblxyXG4gIGFkZENsaWVudChjbGllbnRJRCkge1xyXG4gICAgdGhpcy5jbGllbnRzID0gdGhpcy5jbGllbnRzLmNvbmNhdChjbGllbnRJRCk7XHJcbiAgfVxyXG5cclxuICBhZGRDbGllbnRTdGF0ZShjbGllbnRTdGF0ZSkge1xyXG5cclxuICAgIHRoaXMuY2xpZW50U3RhdGVzLnNldChjbGllbnRTdGF0ZS5jbGllbnRJRCwgY2xpZW50U3RhdGUpO1xyXG5cclxuICB9XHJcblxyXG4gIHJlbW92ZUNsaWVudFN0YXRlKGNsaWVudElEKSB7XHJcblxyXG4gICAgbGV0IHJlbW92YWxJbmRleCA9IHRoaXMuY2xpZW50cy5pbmRleE9mKGNsaWVudElEKTtcclxuICAgIGlmIChyZW1vdmFsSW5kZXggIT0gLTEpIHtcclxuICAgICAgdGhpcy5jbGllbnRzLnNwbGljZShyZW1vdmFsSW5kZXgsIDEpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jbGllbnRTdGF0ZXMuZGVsZXRlKGNsaWVudElEKTtcclxuICB9XHJcblxyXG4gIGdldENsaWVudFN0YXRlKGNsaWVudElEKSB7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuY2xpZW50U3RhdGVzLmdldChjbGllbnRJRCk7XHJcblxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2xpZW50U3RhdGUoY2xpZW50SUQpIHtcclxuXHJcbiAgICB0aGlzLmNsaWVudFN0YXRlcy5kZWxldGUoY2xpZW50SUQpO1xyXG5cclxuICB9XHJcblxyXG4gIGdldFNpbWlsYXJDbGllbnRTdGF0ZXMoY2xpZW50SUQpIHtcclxuICAgIGxldCBzaW1pbGFyQ2xpZW50U3RhdGVzID0gW107XHJcbiAgICBmb3IobGV0IGNsaWVudFN0YXRlIG9mIHRoaXMuY2xpZW50U3RhdGVzLnZhbHVlcygpKSB7XHJcblxyXG4gICAgICBpZihjbGllbnRTdGF0ZS5jbGllbnRJRCAhPSBjbGllbnRJRCkge1xyXG4gICAgICAgIHNpbWlsYXJDbGllbnRTdGF0ZXMgPSBzaW1pbGFyQ2xpZW50U3RhdGVzLmNvbmNhdChjbGllbnRTdGF0ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2ltaWxhckNsaWVudFN0YXRlcztcclxuICB9XHJcblxyXG4gIC8vIHJldHVybiB0aGUgY2xpZW50IHRoYXQgaXMgdGhlIGdob3VsXHJcbiAgZ2V0R2hvdWxDbGllbnRTdGF0ZSgpIHtcclxuXHJcbiAgICBmb3IobGV0IGNsaWVudFN0YXRlIG9mIHRoaXMuY2xpZW50U3RhdGVzLnZhbHVlcygpKSB7XHJcblxyXG4gICAgICBpZihjbGllbnRTdGF0ZS5yb2xlID09IFwiZ2hvdWxcIikge1xyXG4gICAgICAgIHJldHVybiBjbGllbnRTdGF0ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgYXNzaWduUmFuZG9tQ2xpZW50QXNHaG91bCgpIHtcclxuXHJcbiAgICBsZXQgcmFuZG9tR2hvdWxJbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICh0aGlzLmNsaWVudHMubGVuZ3RoKSk7XHJcbiAgICB0aGlzLmNsaWVudFN0YXRlcy5nZXQodGhpcy5jbGllbnRzW3JhbmRvbUdob3VsSW5kZXhdKS5yb2xlID0gXCJnaG91bFwiO1xyXG5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdhbWVTdGF0ZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "GameState.js"
      ],
      "names": [
        "GameState",
        "clients",
        "clientStates",
        "Map",
        "remainingPlayers",
        "clientID",
        "concat",
        "clientState",
        "set",
        "removalIndex",
        "indexOf",
        "splice",
        "get",
        "similarClientStates",
        "values",
        "role",
        "randomGhoulIndex",
        "Math",
        "floor",
        "random",
        "length"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;IAEMA,S;AAEJ,uBAAc;AAAA;;AAEZ,SAAKC,OAAL,GAAe,EAAf,CAFY,CAEO;;AACnB,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB,CAHY,CAGmB;;AAC/B,SAAKC,gBAAL,GAAwB,CAAxB,CAJY,CAIe;AAE5B;;;;8BAESC,Q,EAAU;AAClB,WAAKJ,OAAL,GAAe,KAAKA,OAAL,CAAaK,MAAb,CAAoBD,QAApB,CAAf;AACD;;;mCAEcE,W,EAAa;AAE1B,WAAKL,YAAL,CAAkBM,GAAlB,CAAsBD,WAAW,CAACF,QAAlC,EAA4CE,WAA5C;AAED;;;sCAEiBF,Q,EAAU;AAE1B,UAAII,YAAY,GAAG,KAAKR,OAAL,CAAaS,OAAb,CAAqBL,QAArB,CAAnB;;AACA,UAAII,YAAY,IAAI,CAAC,CAArB,EAAwB;AACtB,aAAKR,OAAL,CAAaU,MAAb,CAAoBF,YAApB,EAAkC,CAAlC;AACD;;AACD,WAAKP,YAAL,WAAyBG,QAAzB;AACD;;;mCAEcA,Q,EAAU;AAEvB,aAAO,KAAKH,YAAL,CAAkBU,GAAlB,CAAsBP,QAAtB,CAAP;AAED;;;sCAEiBA,Q,EAAU;AAE1B,WAAKH,YAAL,WAAyBG,QAAzB;AAED;;;2CAEsBA,Q,EAAU;AAC/B,UAAIQ,mBAAmB,GAAG,EAA1B;;AAD+B,iDAER,KAAKX,YAAL,CAAkBY,MAAlB,EAFQ;AAAA;;AAAA;AAE/B,4DAAmD;AAAA,cAA3CP,WAA2C;;AAEjD,cAAGA,WAAW,CAACF,QAAZ,IAAwBA,QAA3B,EAAqC;AACnCQ,YAAAA,mBAAmB,GAAGA,mBAAmB,CAACP,MAApB,CAA2BC,WAA3B,CAAtB;AACD;AACF;AAP8B;AAAA;AAAA;AAAA;AAAA;;AAS/B,aAAOM,mBAAP;AACD,K,CAED;;;;0CACsB;AAAA,kDAEG,KAAKX,YAAL,CAAkBY,MAAlB,EAFH;AAAA;;AAAA;AAEpB,+DAAmD;AAAA,cAA3CP,WAA2C;;AAEjD,cAAGA,WAAW,CAACQ,IAAZ,IAAoB,OAAvB,EAAgC;AAC9B,mBAAOR,WAAP;AACD;AACF;AAPmB;AAAA;AAAA;AAAA;AAAA;;AASpB,aAAO,IAAP;AACD;;;gDAE2B;AAE1B,UAAIS,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiB,KAAKlB,OAAL,CAAamB,MAAzC,CAAvB;AACA,WAAKlB,YAAL,CAAkBU,GAAlB,CAAsB,KAAKX,OAAL,CAAae,gBAAb,CAAtB,EAAsDD,IAAtD,GAA6D,OAA7D;AAED;;;;;;eAGYf,S",
      "sourceRoot": "D:\\MyProgramming\\ghoul_hunters\\ghoul_hunters_server\\",
      "sourcesContent": [
        "/*The GameState object will keep track of what clients are associated with which\r\nrooms. This will make searching for a certain ClientState much more efficient, as\r\nyou won't have to search through all ClientStates on the server in order to find\r\na certain ClientState. */\r\n\r\nclass GameState {\r\n\r\n  constructor() {\r\n\r\n    this.clients = []; // stores the clientIDs for clients in this game\r\n    this.clientStates = new Map(); // stores the relevant ClientStates in this game\r\n    this.remainingPlayers = 0; //\r\n\r\n  }\r\n\r\n  addClient(clientID) {\r\n    this.clients = this.clients.concat(clientID);\r\n  }\r\n\r\n  addClientState(clientState) {\r\n\r\n    this.clientStates.set(clientState.clientID, clientState);\r\n\r\n  }\r\n\r\n  removeClientState(clientID) {\r\n\r\n    let removalIndex = this.clients.indexOf(clientID);\r\n    if (removalIndex != -1) {\r\n      this.clients.splice(removalIndex, 1);\r\n    }\r\n    this.clientStates.delete(clientID);\r\n  }\r\n\r\n  getClientState(clientID) {\r\n\r\n    return this.clientStates.get(clientID);\r\n\r\n  }\r\n\r\n  removeClientState(clientID) {\r\n\r\n    this.clientStates.delete(clientID);\r\n\r\n  }\r\n\r\n  getSimilarClientStates(clientID) {\r\n    let similarClientStates = [];\r\n    for(let clientState of this.clientStates.values()) {\r\n\r\n      if(clientState.clientID != clientID) {\r\n        similarClientStates = similarClientStates.concat(clientState);\r\n      }\r\n    }\r\n\r\n    return similarClientStates;\r\n  }\r\n\r\n  // return the client that is the ghoul\r\n  getGhoulClientState() {\r\n\r\n    for(let clientState of this.clientStates.values()) {\r\n\r\n      if(clientState.role == \"ghoul\") {\r\n        return clientState;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  assignRandomClientAsGhoul() {\r\n\r\n    let randomGhoulIndex = Math.floor(Math.random() * (this.clients.length));\r\n    this.clientStates.get(this.clients[randomGhoulIndex]).role = \"ghoul\";\r\n\r\n  }\r\n}\r\n\r\nexport default GameState;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1605507788612
  }
}